//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclsInitParameters) DeepCopyInto(out *AclsInitParameters) {
	*out = *in
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclsInitParameters.
func (in *AclsInitParameters) DeepCopy() *AclsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AclsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclsObservation) DeepCopyInto(out *AclsObservation) {
	*out = *in
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclsObservation.
func (in *AclsObservation) DeepCopy() *AclsObservation {
	if in == nil {
		return nil
	}
	out := new(AclsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclsParameters) DeepCopyInto(out *AclsParameters) {
	*out = *in
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclsParameters.
func (in *AclsParameters) DeepCopy() *AclsParameters {
	if in == nil {
		return nil
	}
	out := new(AclsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressesInitParameters) DeepCopyInto(out *AddressesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressesInitParameters.
func (in *AddressesInitParameters) DeepCopy() *AddressesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AddressesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressesObservation) DeepCopyInto(out *AddressesObservation) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressesObservation.
func (in *AddressesObservation) DeepCopy() *AddressesObservation {
	if in == nil {
		return nil
	}
	out := new(AddressesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressesParameters) DeepCopyInto(out *AddressesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressesParameters.
func (in *AddressesParameters) DeepCopy() *AddressesParameters {
	if in == nil {
		return nil
	}
	out := new(AddressesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdmissionpluginsInitParameters) DeepCopyInto(out *AdmissionpluginsInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdmissionpluginsInitParameters.
func (in *AdmissionpluginsInitParameters) DeepCopy() *AdmissionpluginsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdmissionpluginsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdmissionpluginsObservation) DeepCopyInto(out *AdmissionpluginsObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdmissionpluginsObservation.
func (in *AdmissionpluginsObservation) DeepCopy() *AdmissionpluginsObservation {
	if in == nil {
		return nil
	}
	out := new(AdmissionpluginsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdmissionpluginsParameters) DeepCopyInto(out *AdmissionpluginsParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdmissionpluginsParameters.
func (in *AdmissionpluginsParameters) DeepCopy() *AdmissionpluginsParameters {
	if in == nil {
		return nil
	}
	out := new(AdmissionpluginsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPoolsInitParameters) DeepCopyInto(out *AllocationPoolsInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPoolsInitParameters.
func (in *AllocationPoolsInitParameters) DeepCopy() *AllocationPoolsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AllocationPoolsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPoolsObservation) DeepCopyInto(out *AllocationPoolsObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPoolsObservation.
func (in *AllocationPoolsObservation) DeepCopy() *AllocationPoolsObservation {
	if in == nil {
		return nil
	}
	out := new(AllocationPoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPoolsParameters) DeepCopyInto(out *AllocationPoolsParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPoolsParameters.
func (in *AllocationPoolsParameters) DeepCopy() *AllocationPoolsParameters {
	if in == nil {
		return nil
	}
	out := new(AllocationPoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiserverInitParameters) DeepCopyInto(out *ApiserverInitParameters) {
	*out = *in
	if in.Admissionplugins != nil {
		in, out := &in.Admissionplugins, &out.Admissionplugins
		*out = make([]AdmissionpluginsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiserverInitParameters.
func (in *ApiserverInitParameters) DeepCopy() *ApiserverInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApiserverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiserverObservation) DeepCopyInto(out *ApiserverObservation) {
	*out = *in
	if in.Admissionplugins != nil {
		in, out := &in.Admissionplugins, &out.Admissionplugins
		*out = make([]AdmissionpluginsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiserverObservation.
func (in *ApiserverObservation) DeepCopy() *ApiserverObservation {
	if in == nil {
		return nil
	}
	out := new(ApiserverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiserverParameters) DeepCopyInto(out *ApiserverParameters) {
	*out = *in
	if in.Admissionplugins != nil {
		in, out := &in.Admissionplugins, &out.Admissionplugins
		*out = make([]AdmissionpluginsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiserverParameters.
func (in *ApiserverParameters) DeepCopy() *ApiserverParameters {
	if in == nil {
		return nil
	}
	out := new(ApiserverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedVolumesInitParameters) DeepCopyInto(out *AttachedVolumesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedVolumesInitParameters.
func (in *AttachedVolumesInitParameters) DeepCopy() *AttachedVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttachedVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedVolumesObservation) DeepCopyInto(out *AttachedVolumesObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedVolumesObservation.
func (in *AttachedVolumesObservation) DeepCopy() *AttachedVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(AttachedVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedVolumesParameters) DeepCopyInto(out *AttachedVolumesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedVolumesParameters.
func (in *AttachedVolumesParameters) DeepCopy() *AttachedVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(AttachedVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoBackupInitParameters) DeepCopyInto(out *AutoBackupInitParameters) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
	if in.Rotation != nil {
		in, out := &in.Rotation, &out.Rotation
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoBackupInitParameters.
func (in *AutoBackupInitParameters) DeepCopy() *AutoBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoBackupObservation) DeepCopyInto(out *AutoBackupObservation) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
	if in.Rotation != nil {
		in, out := &in.Rotation, &out.Rotation
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoBackupObservation.
func (in *AutoBackupObservation) DeepCopy() *AutoBackupObservation {
	if in == nil {
		return nil
	}
	out := new(AutoBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoBackupParameters) DeepCopyInto(out *AutoBackupParameters) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
	if in.Rotation != nil {
		in, out := &in.Rotation, &out.Rotation
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoBackupParameters.
func (in *AutoBackupParameters) DeepCopy() *AutoBackupParameters {
	if in == nil {
		return nil
	}
	out := new(AutoBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootFromInitParameters) DeepCopyInto(out *BootFromInitParameters) {
	*out = *in
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootFromInitParameters.
func (in *BootFromInitParameters) DeepCopy() *BootFromInitParameters {
	if in == nil {
		return nil
	}
	out := new(BootFromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootFromObservation) DeepCopyInto(out *BootFromObservation) {
	*out = *in
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootFromObservation.
func (in *BootFromObservation) DeepCopy() *BootFromObservation {
	if in == nil {
		return nil
	}
	out := new(BootFromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootFromParameters) DeepCopyInto(out *BootFromParameters) {
	*out = *in
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootFromParameters.
func (in *BootFromParameters) DeepCopy() *BootFromParameters {
	if in == nil {
		return nil
	}
	out := new(BootFromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationInitParameters) DeepCopyInto(out *ConfigurationInitParameters) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationInitParameters.
func (in *ConfigurationInitParameters) DeepCopy() *ConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationObservation) DeepCopyInto(out *ConfigurationObservation) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationObservation.
func (in *ConfigurationObservation) DeepCopy() *ConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationParameters) DeepCopyInto(out *ConfigurationParameters) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationParameters.
func (in *ConfigurationParameters) DeepCopy() *ConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationApiserverAdmissionpluginsInitParameters) DeepCopyInto(out *CustomizationApiserverAdmissionpluginsInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationApiserverAdmissionpluginsInitParameters.
func (in *CustomizationApiserverAdmissionpluginsInitParameters) DeepCopy() *CustomizationApiserverAdmissionpluginsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomizationApiserverAdmissionpluginsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationApiserverAdmissionpluginsObservation) DeepCopyInto(out *CustomizationApiserverAdmissionpluginsObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationApiserverAdmissionpluginsObservation.
func (in *CustomizationApiserverAdmissionpluginsObservation) DeepCopy() *CustomizationApiserverAdmissionpluginsObservation {
	if in == nil {
		return nil
	}
	out := new(CustomizationApiserverAdmissionpluginsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationApiserverAdmissionpluginsParameters) DeepCopyInto(out *CustomizationApiserverAdmissionpluginsParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationApiserverAdmissionpluginsParameters.
func (in *CustomizationApiserverAdmissionpluginsParameters) DeepCopy() *CustomizationApiserverAdmissionpluginsParameters {
	if in == nil {
		return nil
	}
	out := new(CustomizationApiserverAdmissionpluginsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationApiserverInitParameters) DeepCopyInto(out *CustomizationApiserverInitParameters) {
	*out = *in
	if in.Admissionplugins != nil {
		in, out := &in.Admissionplugins, &out.Admissionplugins
		*out = make([]CustomizationApiserverAdmissionpluginsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationApiserverInitParameters.
func (in *CustomizationApiserverInitParameters) DeepCopy() *CustomizationApiserverInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomizationApiserverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationApiserverObservation) DeepCopyInto(out *CustomizationApiserverObservation) {
	*out = *in
	if in.Admissionplugins != nil {
		in, out := &in.Admissionplugins, &out.Admissionplugins
		*out = make([]CustomizationApiserverAdmissionpluginsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationApiserverObservation.
func (in *CustomizationApiserverObservation) DeepCopy() *CustomizationApiserverObservation {
	if in == nil {
		return nil
	}
	out := new(CustomizationApiserverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationApiserverParameters) DeepCopyInto(out *CustomizationApiserverParameters) {
	*out = *in
	if in.Admissionplugins != nil {
		in, out := &in.Admissionplugins, &out.Admissionplugins
		*out = make([]CustomizationApiserverAdmissionpluginsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationApiserverParameters.
func (in *CustomizationApiserverParameters) DeepCopy() *CustomizationApiserverParameters {
	if in == nil {
		return nil
	}
	out := new(CustomizationApiserverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationInitParameters) DeepCopyInto(out *CustomizationInitParameters) {
	*out = *in
	if in.Apiserver != nil {
		in, out := &in.Apiserver, &out.Apiserver
		*out = make([]ApiserverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationInitParameters.
func (in *CustomizationInitParameters) DeepCopy() *CustomizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationKubeProxyInitParameters) DeepCopyInto(out *CustomizationKubeProxyInitParameters) {
	*out = *in
	if in.Iptables != nil {
		in, out := &in.Iptables, &out.Iptables
		*out = make([]IptablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ipvs != nil {
		in, out := &in.Ipvs, &out.Ipvs
		*out = make([]IpvsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationKubeProxyInitParameters.
func (in *CustomizationKubeProxyInitParameters) DeepCopy() *CustomizationKubeProxyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomizationKubeProxyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationKubeProxyObservation) DeepCopyInto(out *CustomizationKubeProxyObservation) {
	*out = *in
	if in.Iptables != nil {
		in, out := &in.Iptables, &out.Iptables
		*out = make([]IptablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ipvs != nil {
		in, out := &in.Ipvs, &out.Ipvs
		*out = make([]IpvsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationKubeProxyObservation.
func (in *CustomizationKubeProxyObservation) DeepCopy() *CustomizationKubeProxyObservation {
	if in == nil {
		return nil
	}
	out := new(CustomizationKubeProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationKubeProxyParameters) DeepCopyInto(out *CustomizationKubeProxyParameters) {
	*out = *in
	if in.Iptables != nil {
		in, out := &in.Iptables, &out.Iptables
		*out = make([]IptablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ipvs != nil {
		in, out := &in.Ipvs, &out.Ipvs
		*out = make([]IpvsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationKubeProxyParameters.
func (in *CustomizationKubeProxyParameters) DeepCopy() *CustomizationKubeProxyParameters {
	if in == nil {
		return nil
	}
	out := new(CustomizationKubeProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationObservation) DeepCopyInto(out *CustomizationObservation) {
	*out = *in
	if in.Apiserver != nil {
		in, out := &in.Apiserver, &out.Apiserver
		*out = make([]ApiserverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationObservation.
func (in *CustomizationObservation) DeepCopy() *CustomizationObservation {
	if in == nil {
		return nil
	}
	out := new(CustomizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationParameters) DeepCopyInto(out *CustomizationParameters) {
	*out = *in
	if in.Apiserver != nil {
		in, out := &in.Apiserver, &out.Apiserver
		*out = make([]ApiserverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationParameters.
func (in *CustomizationParameters) DeepCopy() *CustomizationParameters {
	if in == nil {
		return nil
	}
	out := new(CustomizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DetailsInitParameters) DeepCopyInto(out *DetailsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DetailsInitParameters.
func (in *DetailsInitParameters) DeepCopy() *DetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DetailsObservation) DeepCopyInto(out *DetailsObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.OrderDetailID != nil {
		in, out := &in.OrderDetailID, &out.OrderDetailID
		*out = new(float64)
		**out = **in
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DetailsObservation.
func (in *DetailsObservation) DeepCopy() *DetailsObservation {
	if in == nil {
		return nil
	}
	out := new(DetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DetailsParameters) DeepCopyInto(out *DetailsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DetailsParameters.
func (in *DetailsParameters) DeepCopy() *DetailsParameters {
	if in == nil {
		return nil
	}
	out := new(DetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsInitParameters) DeepCopyInto(out *EndpointsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsInitParameters.
func (in *EndpointsInitParameters) DeepCopy() *EndpointsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsObservation) DeepCopyInto(out *EndpointsObservation) {
	*out = *in
	if in.Component != nil {
		in, out := &in.Component, &out.Component
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SSL != nil {
		in, out := &in.SSL, &out.SSL
		*out = new(bool)
		**out = **in
	}
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
	if in.Scheme != nil {
		in, out := &in.Scheme, &out.Scheme
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsObservation.
func (in *EndpointsObservation) DeepCopy() *EndpointsObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsParameters) DeepCopyInto(out *EndpointsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsParameters.
func (in *EndpointsParameters) DeepCopy() *EndpointsParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalInformationInitParameters) DeepCopyInto(out *ExternalInformationInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalInformationInitParameters.
func (in *ExternalInformationInitParameters) DeepCopy() *ExternalInformationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalInformationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalInformationObservation) DeepCopyInto(out *ExternalInformationObservation) {
	*out = *in
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]IpsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalInformationObservation.
func (in *ExternalInformationObservation) DeepCopy() *ExternalInformationObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalInformationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalInformationParameters) DeepCopyInto(out *ExternalInformationParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalInformationParameters.
func (in *ExternalInformationParameters) DeepCopy() *ExternalInformationParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalInformationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturesInitParameters) DeepCopyInto(out *FeaturesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturesInitParameters.
func (in *FeaturesInitParameters) DeepCopy() *FeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturesObservation) DeepCopyInto(out *FeaturesObservation) {
	*out = *in
	if in.Vulnerability != nil {
		in, out := &in.Vulnerability, &out.Vulnerability
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturesObservation.
func (in *FeaturesObservation) DeepCopy() *FeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(FeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturesParameters) DeepCopyInto(out *FeaturesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturesParameters.
func (in *FeaturesParameters) DeepCopy() *FeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlavorInitParameters) DeepCopyInto(out *FlavorInitParameters) {
	*out = *in
	if in.FlavorID != nil {
		in, out := &in.FlavorID, &out.FlavorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlavorInitParameters.
func (in *FlavorInitParameters) DeepCopy() *FlavorInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlavorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlavorObservation) DeepCopyInto(out *FlavorObservation) {
	*out = *in
	if in.FlavorID != nil {
		in, out := &in.FlavorID, &out.FlavorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlavorObservation.
func (in *FlavorObservation) DeepCopy() *FlavorObservation {
	if in == nil {
		return nil
	}
	out := new(FlavorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlavorParameters) DeepCopyInto(out *FlavorParameters) {
	*out = *in
	if in.FlavorID != nil {
		in, out := &in.FlavorID, &out.FlavorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlavorParameters.
func (in *FlavorParameters) DeepCopy() *FlavorParameters {
	if in == nil {
		return nil
	}
	out := new(FlavorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatingIPCreateInitParameters) DeepCopyInto(out *FloatingIPCreateInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatingIPCreateInitParameters.
func (in *FloatingIPCreateInitParameters) DeepCopy() *FloatingIPCreateInitParameters {
	if in == nil {
		return nil
	}
	out := new(FloatingIPCreateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatingIPCreateObservation) DeepCopyInto(out *FloatingIPCreateObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatingIPCreateObservation.
func (in *FloatingIPCreateObservation) DeepCopy() *FloatingIPCreateObservation {
	if in == nil {
		return nil
	}
	out := new(FloatingIPCreateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatingIPCreateParameters) DeepCopyInto(out *FloatingIPCreateParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatingIPCreateParameters.
func (in *FloatingIPCreateParameters) DeepCopy() *FloatingIPCreateParameters {
	if in == nil {
		return nil
	}
	out := new(FloatingIPCreateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatingIPInitParameters) DeepCopyInto(out *FloatingIPInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatingIPInitParameters.
func (in *FloatingIPInitParameters) DeepCopy() *FloatingIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(FloatingIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatingIPObservation) DeepCopyInto(out *FloatingIPObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatingIPObservation.
func (in *FloatingIPObservation) DeepCopy() *FloatingIPObservation {
	if in == nil {
		return nil
	}
	out := new(FloatingIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatingIPParameters) DeepCopyInto(out *FloatingIPParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatingIPParameters.
func (in *FloatingIPParameters) DeepCopy() *FloatingIPParameters {
	if in == nil {
		return nil
	}
	out := new(FloatingIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayCreateInitParameters) DeepCopyInto(out *GatewayCreateInitParameters) {
	*out = *in
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayCreateInitParameters.
func (in *GatewayCreateInitParameters) DeepCopy() *GatewayCreateInitParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayCreateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayCreateObservation) DeepCopyInto(out *GatewayCreateObservation) {
	*out = *in
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayCreateObservation.
func (in *GatewayCreateObservation) DeepCopy() *GatewayCreateObservation {
	if in == nil {
		return nil
	}
	out := new(GatewayCreateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayCreateParameters) DeepCopyInto(out *GatewayCreateParameters) {
	*out = *in
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayCreateParameters.
func (in *GatewayCreateParameters) DeepCopy() *GatewayCreateParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayCreateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayInitParameters) DeepCopyInto(out *GatewayInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayInitParameters.
func (in *GatewayInitParameters) DeepCopy() *GatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayObservation) DeepCopyInto(out *GatewayObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayObservation.
func (in *GatewayObservation) DeepCopy() *GatewayObservation {
	if in == nil {
		return nil
	}
	out := new(GatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayParameters) DeepCopyInto(out *GatewayParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayParameters.
func (in *GatewayParameters) DeepCopy() *GatewayParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInitParameters) DeepCopyInto(out *GroupInitParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInitParameters.
func (in *GroupInitParameters) DeepCopy() *GroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupObservation) DeepCopyInto(out *GroupObservation) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupObservation.
func (in *GroupObservation) DeepCopy() *GroupObservation {
	if in == nil {
		return nil
	}
	out := new(GroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupParameters) DeepCopyInto(out *GroupParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupParameters.
func (in *GroupParameters) DeepCopy() *GroupParameters {
	if in == nil {
		return nil
	}
	out := new(GroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostRouteInitParameters) DeepCopyInto(out *HostRouteInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.Nexthop != nil {
		in, out := &in.Nexthop, &out.Nexthop
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostRouteInitParameters.
func (in *HostRouteInitParameters) DeepCopy() *HostRouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostRouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostRouteObservation) DeepCopyInto(out *HostRouteObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.Nexthop != nil {
		in, out := &in.Nexthop, &out.Nexthop
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostRouteObservation.
func (in *HostRouteObservation) DeepCopy() *HostRouteObservation {
	if in == nil {
		return nil
	}
	out := new(HostRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostRouteParameters) DeepCopyInto(out *HostRouteParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.Nexthop != nil {
		in, out := &in.Nexthop, &out.Nexthop
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostRouteParameters.
func (in *HostRouteParameters) DeepCopy() *HostRouteParameters {
	if in == nil {
		return nil
	}
	out := new(HostRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPPoolsInitParameters) DeepCopyInto(out *IPPoolsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPPoolsInitParameters.
func (in *IPPoolsInitParameters) DeepCopy() *IPPoolsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPPoolsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPPoolsObservation) DeepCopyInto(out *IPPoolsObservation) {
	*out = *in
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPPoolsObservation.
func (in *IPPoolsObservation) DeepCopy() *IPPoolsObservation {
	if in == nil {
		return nil
	}
	out := new(IPPoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPPoolsParameters) DeepCopyInto(out *IPPoolsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPPoolsParameters.
func (in *IPPoolsParameters) DeepCopy() *IPPoolsParameters {
	if in == nil {
		return nil
	}
	out := new(IPPoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionsInitParameters) DeepCopyInto(out *IPRestrictionsInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionsInitParameters.
func (in *IPRestrictionsInitParameters) DeepCopy() *IPRestrictionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionsObservation) DeepCopyInto(out *IPRestrictionsObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionsObservation.
func (in *IPRestrictionsObservation) DeepCopy() *IPRestrictionsObservation {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionsParameters) DeepCopyInto(out *IPRestrictionsParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionsParameters.
func (in *IPRestrictionsParameters) DeepCopy() *IPRestrictionsParameters {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterfacesInitParameters) DeepCopyInto(out *InterfacesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterfacesInitParameters.
func (in *InterfacesInitParameters) DeepCopy() *InterfacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InterfacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterfacesObservation) DeepCopyInto(out *InterfacesObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterfacesObservation.
func (in *InterfacesObservation) DeepCopy() *InterfacesObservation {
	if in == nil {
		return nil
	}
	out := new(InterfacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterfacesParameters) DeepCopyInto(out *InterfacesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterfacesParameters.
func (in *InterfacesParameters) DeepCopy() *InterfacesParameters {
	if in == nil {
		return nil
	}
	out := new(InterfacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsInitParameters) DeepCopyInto(out *IpsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsInitParameters.
func (in *IpsInitParameters) DeepCopy() *IpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsObservation) DeepCopyInto(out *IpsObservation) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsObservation.
func (in *IpsObservation) DeepCopy() *IpsObservation {
	if in == nil {
		return nil
	}
	out := new(IpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsParameters) DeepCopyInto(out *IpsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsParameters.
func (in *IpsParameters) DeepCopy() *IpsParameters {
	if in == nil {
		return nil
	}
	out := new(IpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IptablesInitParameters) DeepCopyInto(out *IptablesInitParameters) {
	*out = *in
	if in.MinSyncPeriod != nil {
		in, out := &in.MinSyncPeriod, &out.MinSyncPeriod
		*out = new(string)
		**out = **in
	}
	if in.SyncPeriod != nil {
		in, out := &in.SyncPeriod, &out.SyncPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IptablesInitParameters.
func (in *IptablesInitParameters) DeepCopy() *IptablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(IptablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IptablesObservation) DeepCopyInto(out *IptablesObservation) {
	*out = *in
	if in.MinSyncPeriod != nil {
		in, out := &in.MinSyncPeriod, &out.MinSyncPeriod
		*out = new(string)
		**out = **in
	}
	if in.SyncPeriod != nil {
		in, out := &in.SyncPeriod, &out.SyncPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IptablesObservation.
func (in *IptablesObservation) DeepCopy() *IptablesObservation {
	if in == nil {
		return nil
	}
	out := new(IptablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IptablesParameters) DeepCopyInto(out *IptablesParameters) {
	*out = *in
	if in.MinSyncPeriod != nil {
		in, out := &in.MinSyncPeriod, &out.MinSyncPeriod
		*out = new(string)
		**out = **in
	}
	if in.SyncPeriod != nil {
		in, out := &in.SyncPeriod, &out.SyncPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IptablesParameters.
func (in *IptablesParameters) DeepCopy() *IptablesParameters {
	if in == nil {
		return nil
	}
	out := new(IptablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpvsInitParameters) DeepCopyInto(out *IpvsInitParameters) {
	*out = *in
	if in.MinSyncPeriod != nil {
		in, out := &in.MinSyncPeriod, &out.MinSyncPeriod
		*out = new(string)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(string)
		**out = **in
	}
	if in.SyncPeriod != nil {
		in, out := &in.SyncPeriod, &out.SyncPeriod
		*out = new(string)
		**out = **in
	}
	if in.TCPFinTimeout != nil {
		in, out := &in.TCPFinTimeout, &out.TCPFinTimeout
		*out = new(string)
		**out = **in
	}
	if in.TCPTimeout != nil {
		in, out := &in.TCPTimeout, &out.TCPTimeout
		*out = new(string)
		**out = **in
	}
	if in.UDPTimeout != nil {
		in, out := &in.UDPTimeout, &out.UDPTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpvsInitParameters.
func (in *IpvsInitParameters) DeepCopy() *IpvsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpvsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpvsObservation) DeepCopyInto(out *IpvsObservation) {
	*out = *in
	if in.MinSyncPeriod != nil {
		in, out := &in.MinSyncPeriod, &out.MinSyncPeriod
		*out = new(string)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(string)
		**out = **in
	}
	if in.SyncPeriod != nil {
		in, out := &in.SyncPeriod, &out.SyncPeriod
		*out = new(string)
		**out = **in
	}
	if in.TCPFinTimeout != nil {
		in, out := &in.TCPFinTimeout, &out.TCPFinTimeout
		*out = new(string)
		**out = **in
	}
	if in.TCPTimeout != nil {
		in, out := &in.TCPTimeout, &out.TCPTimeout
		*out = new(string)
		**out = **in
	}
	if in.UDPTimeout != nil {
		in, out := &in.UDPTimeout, &out.UDPTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpvsObservation.
func (in *IpvsObservation) DeepCopy() *IpvsObservation {
	if in == nil {
		return nil
	}
	out := new(IpvsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpvsParameters) DeepCopyInto(out *IpvsParameters) {
	*out = *in
	if in.MinSyncPeriod != nil {
		in, out := &in.MinSyncPeriod, &out.MinSyncPeriod
		*out = new(string)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(string)
		**out = **in
	}
	if in.SyncPeriod != nil {
		in, out := &in.SyncPeriod, &out.SyncPeriod
		*out = new(string)
		**out = **in
	}
	if in.TCPFinTimeout != nil {
		in, out := &in.TCPFinTimeout, &out.TCPFinTimeout
		*out = new(string)
		**out = **in
	}
	if in.TCPTimeout != nil {
		in, out := &in.TCPTimeout, &out.TCPTimeout
		*out = new(string)
		**out = **in
	}
	if in.UDPTimeout != nil {
		in, out := &in.UDPTimeout, &out.UDPTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpvsParameters.
func (in *IpvsParameters) DeepCopy() *IpvsParameters {
	if in == nil {
		return nil
	}
	out := new(IpvsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeconfigAttributesInitParameters) DeepCopyInto(out *KubeconfigAttributesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeconfigAttributesInitParameters.
func (in *KubeconfigAttributesInitParameters) DeepCopy() *KubeconfigAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(KubeconfigAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeconfigAttributesObservation) DeepCopyInto(out *KubeconfigAttributesObservation) {
	*out = *in
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(string)
		**out = **in
	}
	if in.ClusterCACertificate != nil {
		in, out := &in.ClusterCACertificate, &out.ClusterCACertificate
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeconfigAttributesObservation.
func (in *KubeconfigAttributesObservation) DeepCopy() *KubeconfigAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(KubeconfigAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeconfigAttributesParameters) DeepCopyInto(out *KubeconfigAttributesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeconfigAttributesParameters.
func (in *KubeconfigAttributesParameters) DeepCopy() *KubeconfigAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(KubeconfigAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataInitParameters) DeepCopyInto(out *MetadataInitParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Finalizers != nil {
		in, out := &in.Finalizers, &out.Finalizers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataInitParameters.
func (in *MetadataInitParameters) DeepCopy() *MetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataObservation) DeepCopyInto(out *MetadataObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Finalizers != nil {
		in, out := &in.Finalizers, &out.Finalizers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataObservation.
func (in *MetadataObservation) DeepCopy() *MetadataObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataParameters) DeepCopyInto(out *MetadataParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Finalizers != nil {
		in, out := &in.Finalizers, &out.Finalizers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataParameters.
func (in *MetadataParameters) DeepCopy() *MetadataParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkCreateInitParameters) DeepCopyInto(out *NetworkCreateInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkCreateInitParameters.
func (in *NetworkCreateInitParameters) DeepCopy() *NetworkCreateInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkCreateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkCreateObservation) DeepCopyInto(out *NetworkCreateObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkCreateObservation.
func (in *NetworkCreateObservation) DeepCopy() *NetworkCreateObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkCreateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkCreateParameters) DeepCopyInto(out *NetworkCreateParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkCreateParameters.
func (in *NetworkCreateParameters) DeepCopy() *NetworkCreateParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkCreateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInitParameters) DeepCopyInto(out *NetworkInitParameters) {
	*out = *in
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = make([]PrivateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInitParameters.
func (in *NetworkInitParameters) DeepCopy() *NetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = make([]PrivateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = make([]PrivateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodesInitParameters) DeepCopyInto(out *NodesInitParameters) {
	*out = *in
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodesInitParameters.
func (in *NodesInitParameters) DeepCopy() *NodesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodesObservation) DeepCopyInto(out *NodesObservation) {
	*out = *in
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodesObservation.
func (in *NodesObservation) DeepCopy() *NodesObservation {
	if in == nil {
		return nil
	}
	out := new(NodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodesParameters) DeepCopyInto(out *NodesParameters) {
	*out = *in
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodesParameters.
func (in *NodesParameters) DeepCopy() *NodesParameters {
	if in == nil {
		return nil
	}
	out := new(NodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrderInitParameters) DeepCopyInto(out *OrderInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrderInitParameters.
func (in *OrderInitParameters) DeepCopy() *OrderInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrderObservation) DeepCopyInto(out *OrderObservation) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(string)
		**out = **in
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make([]DetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.OrderID != nil {
		in, out := &in.OrderID, &out.OrderID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrderObservation.
func (in *OrderObservation) DeepCopy() *OrderObservation {
	if in == nil {
		return nil
	}
	out := new(OrderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrderParameters) DeepCopyInto(out *OrderParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrderParameters.
func (in *OrderParameters) DeepCopy() *OrderParameters {
	if in == nil {
		return nil
	}
	out := new(OrderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanInitParameters) DeepCopyInto(out *PlanInitParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.PlanCode != nil {
		in, out := &in.PlanCode, &out.PlanCode
		*out = new(string)
		**out = **in
	}
	if in.PricingMode != nil {
		in, out := &in.PricingMode, &out.PricingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanInitParameters.
func (in *PlanInitParameters) DeepCopy() *PlanInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlanInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanObservation) DeepCopyInto(out *PlanObservation) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.PlanCode != nil {
		in, out := &in.PlanCode, &out.PlanCode
		*out = new(string)
		**out = **in
	}
	if in.PricingMode != nil {
		in, out := &in.PricingMode, &out.PricingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanObservation.
func (in *PlanObservation) DeepCopy() *PlanObservation {
	if in == nil {
		return nil
	}
	out := new(PlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanOptionConfigurationInitParameters) DeepCopyInto(out *PlanOptionConfigurationInitParameters) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanOptionConfigurationInitParameters.
func (in *PlanOptionConfigurationInitParameters) DeepCopy() *PlanOptionConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlanOptionConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanOptionConfigurationObservation) DeepCopyInto(out *PlanOptionConfigurationObservation) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanOptionConfigurationObservation.
func (in *PlanOptionConfigurationObservation) DeepCopy() *PlanOptionConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(PlanOptionConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanOptionConfigurationParameters) DeepCopyInto(out *PlanOptionConfigurationParameters) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanOptionConfigurationParameters.
func (in *PlanOptionConfigurationParameters) DeepCopy() *PlanOptionConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(PlanOptionConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanOptionInitParameters) DeepCopyInto(out *PlanOptionInitParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]PlanOptionConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.PlanCode != nil {
		in, out := &in.PlanCode, &out.PlanCode
		*out = new(string)
		**out = **in
	}
	if in.PricingMode != nil {
		in, out := &in.PricingMode, &out.PricingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanOptionInitParameters.
func (in *PlanOptionInitParameters) DeepCopy() *PlanOptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlanOptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanOptionObservation) DeepCopyInto(out *PlanOptionObservation) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]PlanOptionConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.PlanCode != nil {
		in, out := &in.PlanCode, &out.PlanCode
		*out = new(string)
		**out = **in
	}
	if in.PricingMode != nil {
		in, out := &in.PricingMode, &out.PricingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanOptionObservation.
func (in *PlanOptionObservation) DeepCopy() *PlanOptionObservation {
	if in == nil {
		return nil
	}
	out := new(PlanOptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanOptionParameters) DeepCopyInto(out *PlanOptionParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]PlanOptionConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.PlanCode != nil {
		in, out := &in.PlanCode, &out.PlanCode
		*out = new(string)
		**out = **in
	}
	if in.PricingMode != nil {
		in, out := &in.PricingMode, &out.PricingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanOptionParameters.
func (in *PlanOptionParameters) DeepCopy() *PlanOptionParameters {
	if in == nil {
		return nil
	}
	out := new(PlanOptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanParameters) DeepCopyInto(out *PlanParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.PlanCode != nil {
		in, out := &in.PlanCode, &out.PlanCode
		*out = new(string)
		**out = **in
	}
	if in.PricingMode != nil {
		in, out := &in.PricingMode, &out.PricingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanParameters.
func (in *PlanParameters) DeepCopy() *PlanParameters {
	if in == nil {
		return nil
	}
	out := new(PlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateInitParameters) DeepCopyInto(out *PrivateInitParameters) {
	*out = *in
	if in.FloatingIP != nil {
		in, out := &in.FloatingIP, &out.FloatingIP
		*out = make([]FloatingIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FloatingIPCreate != nil {
		in, out := &in.FloatingIPCreate, &out.FloatingIPCreate
		*out = make([]FloatingIPCreateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]GatewayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayCreate != nil {
		in, out := &in.GatewayCreate, &out.GatewayCreate
		*out = make([]GatewayCreateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]PrivateNetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkCreate != nil {
		in, out := &in.NetworkCreate, &out.NetworkCreate
		*out = make([]NetworkCreateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateInitParameters.
func (in *PrivateInitParameters) DeepCopy() *PrivateInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateNetworkConfigurationInitParameters) DeepCopyInto(out *PrivateNetworkConfigurationInitParameters) {
	*out = *in
	if in.DefaultVrackGateway != nil {
		in, out := &in.DefaultVrackGateway, &out.DefaultVrackGateway
		*out = new(string)
		**out = **in
	}
	if in.PrivateNetworkRoutingAsDefault != nil {
		in, out := &in.PrivateNetworkRoutingAsDefault, &out.PrivateNetworkRoutingAsDefault
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateNetworkConfigurationInitParameters.
func (in *PrivateNetworkConfigurationInitParameters) DeepCopy() *PrivateNetworkConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateNetworkConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateNetworkConfigurationObservation) DeepCopyInto(out *PrivateNetworkConfigurationObservation) {
	*out = *in
	if in.DefaultVrackGateway != nil {
		in, out := &in.DefaultVrackGateway, &out.DefaultVrackGateway
		*out = new(string)
		**out = **in
	}
	if in.PrivateNetworkRoutingAsDefault != nil {
		in, out := &in.PrivateNetworkRoutingAsDefault, &out.PrivateNetworkRoutingAsDefault
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateNetworkConfigurationObservation.
func (in *PrivateNetworkConfigurationObservation) DeepCopy() *PrivateNetworkConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateNetworkConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateNetworkConfigurationParameters) DeepCopyInto(out *PrivateNetworkConfigurationParameters) {
	*out = *in
	if in.DefaultVrackGateway != nil {
		in, out := &in.DefaultVrackGateway, &out.DefaultVrackGateway
		*out = new(string)
		**out = **in
	}
	if in.PrivateNetworkRoutingAsDefault != nil {
		in, out := &in.PrivateNetworkRoutingAsDefault, &out.PrivateNetworkRoutingAsDefault
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateNetworkConfigurationParameters.
func (in *PrivateNetworkConfigurationParameters) DeepCopy() *PrivateNetworkConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateNetworkConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateNetworkInitParameters) DeepCopyInto(out *PrivateNetworkInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateNetworkInitParameters.
func (in *PrivateNetworkInitParameters) DeepCopy() *PrivateNetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateNetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateNetworkObservation) DeepCopyInto(out *PrivateNetworkObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateNetworkObservation.
func (in *PrivateNetworkObservation) DeepCopy() *PrivateNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateNetworkParameters) DeepCopyInto(out *PrivateNetworkParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateNetworkParameters.
func (in *PrivateNetworkParameters) DeepCopy() *PrivateNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateObservation) DeepCopyInto(out *PrivateObservation) {
	*out = *in
	if in.FloatingIP != nil {
		in, out := &in.FloatingIP, &out.FloatingIP
		*out = make([]FloatingIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FloatingIPCreate != nil {
		in, out := &in.FloatingIPCreate, &out.FloatingIPCreate
		*out = make([]FloatingIPCreateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]GatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayCreate != nil {
		in, out := &in.GatewayCreate, &out.GatewayCreate
		*out = make([]GatewayCreateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]PrivateNetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkCreate != nil {
		in, out := &in.NetworkCreate, &out.NetworkCreate
		*out = make([]NetworkCreateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateObservation.
func (in *PrivateObservation) DeepCopy() *PrivateObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateParameters) DeepCopyInto(out *PrivateParameters) {
	*out = *in
	if in.FloatingIP != nil {
		in, out := &in.FloatingIP, &out.FloatingIP
		*out = make([]FloatingIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FloatingIPCreate != nil {
		in, out := &in.FloatingIPCreate, &out.FloatingIPCreate
		*out = make([]FloatingIPCreateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]GatewayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayCreate != nil {
		in, out := &in.GatewayCreate, &out.GatewayCreate
		*out = make([]GatewayCreateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]PrivateNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkCreate != nil {
		in, out := &in.NetworkCreate, &out.NetworkCreate
		*out = make([]NetworkCreateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateParameters.
func (in *PrivateParameters) DeepCopy() *PrivateParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Project) DeepCopyInto(out *Project) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Project.
func (in *Project) DeepCopy() *Project {
	if in == nil {
		return nil
	}
	out := new(Project)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Project) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistry) DeepCopyInto(out *ProjectContainerregistry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistry.
func (in *ProjectContainerregistry) DeepCopy() *ProjectContainerregistry {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIAM) DeepCopyInto(out *ProjectContainerregistryIAM) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIAM.
func (in *ProjectContainerregistryIAM) DeepCopy() *ProjectContainerregistryIAM {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIAM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryIAM) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIAMInitParameters) DeepCopyInto(out *ProjectContainerregistryIAMInitParameters) {
	*out = *in
	if in.DeleteUsers != nil {
		in, out := &in.DeleteUsers, &out.DeleteUsers
		*out = new(bool)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIAMInitParameters.
func (in *ProjectContainerregistryIAMInitParameters) DeepCopy() *ProjectContainerregistryIAMInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIAMInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIAMList) DeepCopyInto(out *ProjectContainerregistryIAMList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectContainerregistryIAM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIAMList.
func (in *ProjectContainerregistryIAMList) DeepCopy() *ProjectContainerregistryIAMList {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIAMList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryIAMList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIAMObservation) DeepCopyInto(out *ProjectContainerregistryIAMObservation) {
	*out = *in
	if in.DeleteUsers != nil {
		in, out := &in.DeleteUsers, &out.DeleteUsers
		*out = new(bool)
		**out = **in
	}
	if in.IAMEnabled != nil {
		in, out := &in.IAMEnabled, &out.IAMEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIAMObservation.
func (in *ProjectContainerregistryIAMObservation) DeepCopy() *ProjectContainerregistryIAMObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIAMObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIAMParameters) DeepCopyInto(out *ProjectContainerregistryIAMParameters) {
	*out = *in
	if in.DeleteUsers != nil {
		in, out := &in.DeleteUsers, &out.DeleteUsers
		*out = new(bool)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIAMParameters.
func (in *ProjectContainerregistryIAMParameters) DeepCopy() *ProjectContainerregistryIAMParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIAMParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIAMSpec) DeepCopyInto(out *ProjectContainerregistryIAMSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIAMSpec.
func (in *ProjectContainerregistryIAMSpec) DeepCopy() *ProjectContainerregistryIAMSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIAMSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIAMStatus) DeepCopyInto(out *ProjectContainerregistryIAMStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIAMStatus.
func (in *ProjectContainerregistryIAMStatus) DeepCopy() *ProjectContainerregistryIAMStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIAMStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsManagement) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsManagement.
func (in *ProjectContainerregistryIPRestrictionsManagement) DeepCopy() *ProjectContainerregistryIPRestrictionsManagement {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryIPRestrictionsManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsManagementInitParameters) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsManagementInitParameters) {
	*out = *in
	if in.IPRestrictions != nil {
		in, out := &in.IPRestrictions, &out.IPRestrictions
		*out = make([]map[string]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*string, len(*in))
				for key, val := range *in {
					var outVal *string
					if val == nil {
						(*out)[key] = nil
					} else {
						inVal := (*in)[key]
						in, out := &inVal, &outVal
						*out = new(string)
						**out = **in
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsManagementInitParameters.
func (in *ProjectContainerregistryIPRestrictionsManagementInitParameters) DeepCopy() *ProjectContainerregistryIPRestrictionsManagementInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsManagementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsManagementList) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectContainerregistryIPRestrictionsManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsManagementList.
func (in *ProjectContainerregistryIPRestrictionsManagementList) DeepCopy() *ProjectContainerregistryIPRestrictionsManagementList {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryIPRestrictionsManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsManagementObservation) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsManagementObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPRestrictions != nil {
		in, out := &in.IPRestrictions, &out.IPRestrictions
		*out = make([]map[string]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*string, len(*in))
				for key, val := range *in {
					var outVal *string
					if val == nil {
						(*out)[key] = nil
					} else {
						inVal := (*in)[key]
						in, out := &inVal, &outVal
						*out = new(string)
						**out = **in
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsManagementObservation.
func (in *ProjectContainerregistryIPRestrictionsManagementObservation) DeepCopy() *ProjectContainerregistryIPRestrictionsManagementObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsManagementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsManagementParameters) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsManagementParameters) {
	*out = *in
	if in.IPRestrictions != nil {
		in, out := &in.IPRestrictions, &out.IPRestrictions
		*out = make([]map[string]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*string, len(*in))
				for key, val := range *in {
					var outVal *string
					if val == nil {
						(*out)[key] = nil
					} else {
						inVal := (*in)[key]
						in, out := &inVal, &outVal
						*out = new(string)
						**out = **in
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsManagementParameters.
func (in *ProjectContainerregistryIPRestrictionsManagementParameters) DeepCopy() *ProjectContainerregistryIPRestrictionsManagementParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsManagementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsManagementSpec) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsManagementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsManagementSpec.
func (in *ProjectContainerregistryIPRestrictionsManagementSpec) DeepCopy() *ProjectContainerregistryIPRestrictionsManagementSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsManagementStatus) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsManagementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsManagementStatus.
func (in *ProjectContainerregistryIPRestrictionsManagementStatus) DeepCopy() *ProjectContainerregistryIPRestrictionsManagementStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsRegistry) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsRegistry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsRegistry.
func (in *ProjectContainerregistryIPRestrictionsRegistry) DeepCopy() *ProjectContainerregistryIPRestrictionsRegistry {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsRegistry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryIPRestrictionsRegistry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsRegistryInitParameters) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsRegistryInitParameters) {
	*out = *in
	if in.IPRestrictions != nil {
		in, out := &in.IPRestrictions, &out.IPRestrictions
		*out = make([]map[string]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*string, len(*in))
				for key, val := range *in {
					var outVal *string
					if val == nil {
						(*out)[key] = nil
					} else {
						inVal := (*in)[key]
						in, out := &inVal, &outVal
						*out = new(string)
						**out = **in
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsRegistryInitParameters.
func (in *ProjectContainerregistryIPRestrictionsRegistryInitParameters) DeepCopy() *ProjectContainerregistryIPRestrictionsRegistryInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsRegistryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsRegistryList) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsRegistryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectContainerregistryIPRestrictionsRegistry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsRegistryList.
func (in *ProjectContainerregistryIPRestrictionsRegistryList) DeepCopy() *ProjectContainerregistryIPRestrictionsRegistryList {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsRegistryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryIPRestrictionsRegistryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsRegistryObservation) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsRegistryObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPRestrictions != nil {
		in, out := &in.IPRestrictions, &out.IPRestrictions
		*out = make([]map[string]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*string, len(*in))
				for key, val := range *in {
					var outVal *string
					if val == nil {
						(*out)[key] = nil
					} else {
						inVal := (*in)[key]
						in, out := &inVal, &outVal
						*out = new(string)
						**out = **in
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsRegistryObservation.
func (in *ProjectContainerregistryIPRestrictionsRegistryObservation) DeepCopy() *ProjectContainerregistryIPRestrictionsRegistryObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsRegistryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsRegistryParameters) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsRegistryParameters) {
	*out = *in
	if in.IPRestrictions != nil {
		in, out := &in.IPRestrictions, &out.IPRestrictions
		*out = make([]map[string]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*string, len(*in))
				for key, val := range *in {
					var outVal *string
					if val == nil {
						(*out)[key] = nil
					} else {
						inVal := (*in)[key]
						in, out := &inVal, &outVal
						*out = new(string)
						**out = **in
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsRegistryParameters.
func (in *ProjectContainerregistryIPRestrictionsRegistryParameters) DeepCopy() *ProjectContainerregistryIPRestrictionsRegistryParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsRegistryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsRegistrySpec) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsRegistrySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsRegistrySpec.
func (in *ProjectContainerregistryIPRestrictionsRegistrySpec) DeepCopy() *ProjectContainerregistryIPRestrictionsRegistrySpec {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsRegistrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryIPRestrictionsRegistryStatus) DeepCopyInto(out *ProjectContainerregistryIPRestrictionsRegistryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryIPRestrictionsRegistryStatus.
func (in *ProjectContainerregistryIPRestrictionsRegistryStatus) DeepCopy() *ProjectContainerregistryIPRestrictionsRegistryStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryIPRestrictionsRegistryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryInitParameters) DeepCopyInto(out *ProjectContainerregistryInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PlanID != nil {
		in, out := &in.PlanID, &out.PlanID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryInitParameters.
func (in *ProjectContainerregistryInitParameters) DeepCopy() *ProjectContainerregistryInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryList) DeepCopyInto(out *ProjectContainerregistryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectContainerregistry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryList.
func (in *ProjectContainerregistryList) DeepCopy() *ProjectContainerregistryList {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryObservation) DeepCopyInto(out *ProjectContainerregistryObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.IAMEnabled != nil {
		in, out := &in.IAMEnabled, &out.IAMEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = make([]ProjectContainerregistryPlanObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlanID != nil {
		in, out := &in.PlanID, &out.PlanID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryObservation.
func (in *ProjectContainerregistryObservation) DeepCopy() *ProjectContainerregistryObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidc) DeepCopyInto(out *ProjectContainerregistryOidc) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidc.
func (in *ProjectContainerregistryOidc) DeepCopy() *ProjectContainerregistryOidc {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidc)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryOidc) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidcInitParameters) DeepCopyInto(out *ProjectContainerregistryOidcInitParameters) {
	*out = *in
	if in.DeleteUsers != nil {
		in, out := &in.DeleteUsers, &out.DeleteUsers
		*out = new(bool)
		**out = **in
	}
	if in.OidcAdminGroup != nil {
		in, out := &in.OidcAdminGroup, &out.OidcAdminGroup
		*out = new(string)
		**out = **in
	}
	if in.OidcAutoOnboard != nil {
		in, out := &in.OidcAutoOnboard, &out.OidcAutoOnboard
		*out = new(bool)
		**out = **in
	}
	if in.OidcClientID != nil {
		in, out := &in.OidcClientID, &out.OidcClientID
		*out = new(string)
		**out = **in
	}
	out.OidcClientSecretSecretRef = in.OidcClientSecretSecretRef
	if in.OidcEndpoint != nil {
		in, out := &in.OidcEndpoint, &out.OidcEndpoint
		*out = new(string)
		**out = **in
	}
	if in.OidcGroupsClaim != nil {
		in, out := &in.OidcGroupsClaim, &out.OidcGroupsClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcName != nil {
		in, out := &in.OidcName, &out.OidcName
		*out = new(string)
		**out = **in
	}
	if in.OidcScope != nil {
		in, out := &in.OidcScope, &out.OidcScope
		*out = new(string)
		**out = **in
	}
	if in.OidcUserClaim != nil {
		in, out := &in.OidcUserClaim, &out.OidcUserClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcVerifyCert != nil {
		in, out := &in.OidcVerifyCert, &out.OidcVerifyCert
		*out = new(bool)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidcInitParameters.
func (in *ProjectContainerregistryOidcInitParameters) DeepCopy() *ProjectContainerregistryOidcInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidcInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidcList) DeepCopyInto(out *ProjectContainerregistryOidcList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectContainerregistryOidc, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidcList.
func (in *ProjectContainerregistryOidcList) DeepCopy() *ProjectContainerregistryOidcList {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidcList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryOidcList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidcObservation) DeepCopyInto(out *ProjectContainerregistryOidcObservation) {
	*out = *in
	if in.DeleteUsers != nil {
		in, out := &in.DeleteUsers, &out.DeleteUsers
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OidcAdminGroup != nil {
		in, out := &in.OidcAdminGroup, &out.OidcAdminGroup
		*out = new(string)
		**out = **in
	}
	if in.OidcAutoOnboard != nil {
		in, out := &in.OidcAutoOnboard, &out.OidcAutoOnboard
		*out = new(bool)
		**out = **in
	}
	if in.OidcClientID != nil {
		in, out := &in.OidcClientID, &out.OidcClientID
		*out = new(string)
		**out = **in
	}
	if in.OidcEndpoint != nil {
		in, out := &in.OidcEndpoint, &out.OidcEndpoint
		*out = new(string)
		**out = **in
	}
	if in.OidcGroupsClaim != nil {
		in, out := &in.OidcGroupsClaim, &out.OidcGroupsClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcName != nil {
		in, out := &in.OidcName, &out.OidcName
		*out = new(string)
		**out = **in
	}
	if in.OidcScope != nil {
		in, out := &in.OidcScope, &out.OidcScope
		*out = new(string)
		**out = **in
	}
	if in.OidcUserClaim != nil {
		in, out := &in.OidcUserClaim, &out.OidcUserClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcVerifyCert != nil {
		in, out := &in.OidcVerifyCert, &out.OidcVerifyCert
		*out = new(bool)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidcObservation.
func (in *ProjectContainerregistryOidcObservation) DeepCopy() *ProjectContainerregistryOidcObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidcObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidcParameters) DeepCopyInto(out *ProjectContainerregistryOidcParameters) {
	*out = *in
	if in.DeleteUsers != nil {
		in, out := &in.DeleteUsers, &out.DeleteUsers
		*out = new(bool)
		**out = **in
	}
	if in.OidcAdminGroup != nil {
		in, out := &in.OidcAdminGroup, &out.OidcAdminGroup
		*out = new(string)
		**out = **in
	}
	if in.OidcAutoOnboard != nil {
		in, out := &in.OidcAutoOnboard, &out.OidcAutoOnboard
		*out = new(bool)
		**out = **in
	}
	if in.OidcClientID != nil {
		in, out := &in.OidcClientID, &out.OidcClientID
		*out = new(string)
		**out = **in
	}
	out.OidcClientSecretSecretRef = in.OidcClientSecretSecretRef
	if in.OidcEndpoint != nil {
		in, out := &in.OidcEndpoint, &out.OidcEndpoint
		*out = new(string)
		**out = **in
	}
	if in.OidcGroupsClaim != nil {
		in, out := &in.OidcGroupsClaim, &out.OidcGroupsClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcName != nil {
		in, out := &in.OidcName, &out.OidcName
		*out = new(string)
		**out = **in
	}
	if in.OidcScope != nil {
		in, out := &in.OidcScope, &out.OidcScope
		*out = new(string)
		**out = **in
	}
	if in.OidcUserClaim != nil {
		in, out := &in.OidcUserClaim, &out.OidcUserClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcVerifyCert != nil {
		in, out := &in.OidcVerifyCert, &out.OidcVerifyCert
		*out = new(bool)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidcParameters.
func (in *ProjectContainerregistryOidcParameters) DeepCopy() *ProjectContainerregistryOidcParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidcParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidcSpec) DeepCopyInto(out *ProjectContainerregistryOidcSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidcSpec.
func (in *ProjectContainerregistryOidcSpec) DeepCopy() *ProjectContainerregistryOidcSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidcSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidcStatus) DeepCopyInto(out *ProjectContainerregistryOidcStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidcStatus.
func (in *ProjectContainerregistryOidcStatus) DeepCopy() *ProjectContainerregistryOidcStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidcStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryParameters) DeepCopyInto(out *ProjectContainerregistryParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PlanID != nil {
		in, out := &in.PlanID, &out.PlanID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryParameters.
func (in *ProjectContainerregistryParameters) DeepCopy() *ProjectContainerregistryParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryPlanInitParameters) DeepCopyInto(out *ProjectContainerregistryPlanInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryPlanInitParameters.
func (in *ProjectContainerregistryPlanInitParameters) DeepCopy() *ProjectContainerregistryPlanInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryPlanInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryPlanObservation) DeepCopyInto(out *ProjectContainerregistryPlanObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]FeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryLimits != nil {
		in, out := &in.RegistryLimits, &out.RegistryLimits
		*out = make([]RegistryLimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryPlanObservation.
func (in *ProjectContainerregistryPlanObservation) DeepCopy() *ProjectContainerregistryPlanObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryPlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryPlanParameters) DeepCopyInto(out *ProjectContainerregistryPlanParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryPlanParameters.
func (in *ProjectContainerregistryPlanParameters) DeepCopy() *ProjectContainerregistryPlanParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryPlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistrySpec) DeepCopyInto(out *ProjectContainerregistrySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistrySpec.
func (in *ProjectContainerregistrySpec) DeepCopy() *ProjectContainerregistrySpec {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryStatus) DeepCopyInto(out *ProjectContainerregistryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryStatus.
func (in *ProjectContainerregistryStatus) DeepCopy() *ProjectContainerregistryStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUser) DeepCopyInto(out *ProjectContainerregistryUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUser.
func (in *ProjectContainerregistryUser) DeepCopy() *ProjectContainerregistryUser {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUserInitParameters) DeepCopyInto(out *ProjectContainerregistryUserInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUserInitParameters.
func (in *ProjectContainerregistryUserInitParameters) DeepCopy() *ProjectContainerregistryUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUserList) DeepCopyInto(out *ProjectContainerregistryUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectContainerregistryUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUserList.
func (in *ProjectContainerregistryUserList) DeepCopy() *ProjectContainerregistryUserList {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUserObservation) DeepCopyInto(out *ProjectContainerregistryUserObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUserObservation.
func (in *ProjectContainerregistryUserObservation) DeepCopy() *ProjectContainerregistryUserObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUserParameters) DeepCopyInto(out *ProjectContainerregistryUserParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUserParameters.
func (in *ProjectContainerregistryUserParameters) DeepCopy() *ProjectContainerregistryUserParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUserSpec) DeepCopyInto(out *ProjectContainerregistryUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUserSpec.
func (in *ProjectContainerregistryUserSpec) DeepCopy() *ProjectContainerregistryUserSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUserStatus) DeepCopyInto(out *ProjectContainerregistryUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUserStatus.
func (in *ProjectContainerregistryUserStatus) DeepCopy() *ProjectContainerregistryUserStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabase) DeepCopyInto(out *ProjectDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabase.
func (in *ProjectDatabase) DeepCopy() *ProjectDatabase {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseDatabase) DeepCopyInto(out *ProjectDatabaseDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseDatabase.
func (in *ProjectDatabaseDatabase) DeepCopy() *ProjectDatabaseDatabase {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseDatabaseInitParameters) DeepCopyInto(out *ProjectDatabaseDatabaseInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseDatabaseInitParameters.
func (in *ProjectDatabaseDatabaseInitParameters) DeepCopy() *ProjectDatabaseDatabaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseDatabaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseDatabaseList) DeepCopyInto(out *ProjectDatabaseDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseDatabaseList.
func (in *ProjectDatabaseDatabaseList) DeepCopy() *ProjectDatabaseDatabaseList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseDatabaseObservation) DeepCopyInto(out *ProjectDatabaseDatabaseObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(bool)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseDatabaseObservation.
func (in *ProjectDatabaseDatabaseObservation) DeepCopy() *ProjectDatabaseDatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseDatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseDatabaseParameters) DeepCopyInto(out *ProjectDatabaseDatabaseParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseDatabaseParameters.
func (in *ProjectDatabaseDatabaseParameters) DeepCopy() *ProjectDatabaseDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseDatabaseSpec) DeepCopyInto(out *ProjectDatabaseDatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseDatabaseSpec.
func (in *ProjectDatabaseDatabaseSpec) DeepCopy() *ProjectDatabaseDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseDatabaseStatus) DeepCopyInto(out *ProjectDatabaseDatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseDatabaseStatus.
func (in *ProjectDatabaseDatabaseStatus) DeepCopy() *ProjectDatabaseDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIPRestriction) DeepCopyInto(out *ProjectDatabaseIPRestriction) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIPRestriction.
func (in *ProjectDatabaseIPRestriction) DeepCopy() *ProjectDatabaseIPRestriction {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIPRestriction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseIPRestriction) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIPRestrictionInitParameters) DeepCopyInto(out *ProjectDatabaseIPRestrictionInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIPRestrictionInitParameters.
func (in *ProjectDatabaseIPRestrictionInitParameters) DeepCopy() *ProjectDatabaseIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIPRestrictionList) DeepCopyInto(out *ProjectDatabaseIPRestrictionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseIPRestriction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIPRestrictionList.
func (in *ProjectDatabaseIPRestrictionList) DeepCopy() *ProjectDatabaseIPRestrictionList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIPRestrictionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseIPRestrictionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIPRestrictionObservation) DeepCopyInto(out *ProjectDatabaseIPRestrictionObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIPRestrictionObservation.
func (in *ProjectDatabaseIPRestrictionObservation) DeepCopy() *ProjectDatabaseIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIPRestrictionParameters) DeepCopyInto(out *ProjectDatabaseIPRestrictionParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIPRestrictionParameters.
func (in *ProjectDatabaseIPRestrictionParameters) DeepCopy() *ProjectDatabaseIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIPRestrictionSpec) DeepCopyInto(out *ProjectDatabaseIPRestrictionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIPRestrictionSpec.
func (in *ProjectDatabaseIPRestrictionSpec) DeepCopy() *ProjectDatabaseIPRestrictionSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIPRestrictionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIPRestrictionStatus) DeepCopyInto(out *ProjectDatabaseIPRestrictionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIPRestrictionStatus.
func (in *ProjectDatabaseIPRestrictionStatus) DeepCopy() *ProjectDatabaseIPRestrictionStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIPRestrictionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseInitParameters) DeepCopyInto(out *ProjectDatabaseInitParameters) {
	*out = *in
	if in.AdvancedConfiguration != nil {
		in, out := &in.AdvancedConfiguration, &out.AdvancedConfiguration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.BackupRegions != nil {
		in, out := &in.BackupRegions, &out.BackupRegions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BackupTime != nil {
		in, out := &in.BackupTime, &out.BackupTime
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.IPRestrictions != nil {
		in, out := &in.IPRestrictions, &out.IPRestrictions
		*out = make([]IPRestrictionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaRestAPI != nil {
		in, out := &in.KafkaRestAPI, &out.KafkaRestAPI
		*out = new(bool)
		**out = **in
	}
	if in.KafkaSchemaRegistry != nil {
		in, out := &in.KafkaSchemaRegistry, &out.KafkaSchemaRegistry
		*out = new(bool)
		**out = **in
	}
	if in.MaintenanceTime != nil {
		in, out := &in.MaintenanceTime, &out.MaintenanceTime
		*out = new(string)
		**out = **in
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]NodesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpensearchAclsEnabled != nil {
		in, out := &in.OpensearchAclsEnabled, &out.OpensearchAclsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseInitParameters.
func (in *ProjectDatabaseInitParameters) DeepCopy() *ProjectDatabaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIntegration) DeepCopyInto(out *ProjectDatabaseIntegration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIntegration.
func (in *ProjectDatabaseIntegration) DeepCopy() *ProjectDatabaseIntegration {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIntegration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseIntegration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIntegrationInitParameters) DeepCopyInto(out *ProjectDatabaseIntegrationInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.DestinationServiceID != nil {
		in, out := &in.DestinationServiceID, &out.DestinationServiceID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SourceServiceID != nil {
		in, out := &in.SourceServiceID, &out.SourceServiceID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIntegrationInitParameters.
func (in *ProjectDatabaseIntegrationInitParameters) DeepCopy() *ProjectDatabaseIntegrationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIntegrationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIntegrationList) DeepCopyInto(out *ProjectDatabaseIntegrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseIntegration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIntegrationList.
func (in *ProjectDatabaseIntegrationList) DeepCopy() *ProjectDatabaseIntegrationList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIntegrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseIntegrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIntegrationObservation) DeepCopyInto(out *ProjectDatabaseIntegrationObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.DestinationServiceID != nil {
		in, out := &in.DestinationServiceID, &out.DestinationServiceID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SourceServiceID != nil {
		in, out := &in.SourceServiceID, &out.SourceServiceID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIntegrationObservation.
func (in *ProjectDatabaseIntegrationObservation) DeepCopy() *ProjectDatabaseIntegrationObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIntegrationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIntegrationParameters) DeepCopyInto(out *ProjectDatabaseIntegrationParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.DestinationServiceID != nil {
		in, out := &in.DestinationServiceID, &out.DestinationServiceID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SourceServiceID != nil {
		in, out := &in.SourceServiceID, &out.SourceServiceID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIntegrationParameters.
func (in *ProjectDatabaseIntegrationParameters) DeepCopy() *ProjectDatabaseIntegrationParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIntegrationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIntegrationSpec) DeepCopyInto(out *ProjectDatabaseIntegrationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIntegrationSpec.
func (in *ProjectDatabaseIntegrationSpec) DeepCopy() *ProjectDatabaseIntegrationSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIntegrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseIntegrationStatus) DeepCopyInto(out *ProjectDatabaseIntegrationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseIntegrationStatus.
func (in *ProjectDatabaseIntegrationStatus) DeepCopy() *ProjectDatabaseIntegrationStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseIntegrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaACL) DeepCopyInto(out *ProjectDatabaseKafkaACL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaACL.
func (in *ProjectDatabaseKafkaACL) DeepCopy() *ProjectDatabaseKafkaACL {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaACL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseKafkaACL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaACLInitParameters) DeepCopyInto(out *ProjectDatabaseKafkaACLInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaACLInitParameters.
func (in *ProjectDatabaseKafkaACLInitParameters) DeepCopy() *ProjectDatabaseKafkaACLInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaACLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaACLList) DeepCopyInto(out *ProjectDatabaseKafkaACLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseKafkaACL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaACLList.
func (in *ProjectDatabaseKafkaACLList) DeepCopy() *ProjectDatabaseKafkaACLList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaACLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseKafkaACLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaACLObservation) DeepCopyInto(out *ProjectDatabaseKafkaACLObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaACLObservation.
func (in *ProjectDatabaseKafkaACLObservation) DeepCopy() *ProjectDatabaseKafkaACLObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaACLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaACLParameters) DeepCopyInto(out *ProjectDatabaseKafkaACLParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaACLParameters.
func (in *ProjectDatabaseKafkaACLParameters) DeepCopy() *ProjectDatabaseKafkaACLParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaACLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaACLSpec) DeepCopyInto(out *ProjectDatabaseKafkaACLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaACLSpec.
func (in *ProjectDatabaseKafkaACLSpec) DeepCopy() *ProjectDatabaseKafkaACLSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaACLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaACLStatus) DeepCopyInto(out *ProjectDatabaseKafkaACLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaACLStatus.
func (in *ProjectDatabaseKafkaACLStatus) DeepCopy() *ProjectDatabaseKafkaACLStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaACLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryacl) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryacl) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryacl.
func (in *ProjectDatabaseKafkaSchemaregistryacl) DeepCopy() *ProjectDatabaseKafkaSchemaregistryacl {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryacl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseKafkaSchemaregistryacl) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryaclInitParameters) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryaclInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryaclInitParameters.
func (in *ProjectDatabaseKafkaSchemaregistryaclInitParameters) DeepCopy() *ProjectDatabaseKafkaSchemaregistryaclInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryaclInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryaclList) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryaclList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseKafkaSchemaregistryacl, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryaclList.
func (in *ProjectDatabaseKafkaSchemaregistryaclList) DeepCopy() *ProjectDatabaseKafkaSchemaregistryaclList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryaclList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseKafkaSchemaregistryaclList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryaclObservation) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryaclObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryaclObservation.
func (in *ProjectDatabaseKafkaSchemaregistryaclObservation) DeepCopy() *ProjectDatabaseKafkaSchemaregistryaclObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryaclObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryaclParameters) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryaclParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryaclParameters.
func (in *ProjectDatabaseKafkaSchemaregistryaclParameters) DeepCopy() *ProjectDatabaseKafkaSchemaregistryaclParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryaclParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryaclSpec) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryaclSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryaclSpec.
func (in *ProjectDatabaseKafkaSchemaregistryaclSpec) DeepCopy() *ProjectDatabaseKafkaSchemaregistryaclSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryaclSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryaclStatus) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryaclStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryaclStatus.
func (in *ProjectDatabaseKafkaSchemaregistryaclStatus) DeepCopy() *ProjectDatabaseKafkaSchemaregistryaclStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryaclStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaTopic) DeepCopyInto(out *ProjectDatabaseKafkaTopic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaTopic.
func (in *ProjectDatabaseKafkaTopic) DeepCopy() *ProjectDatabaseKafkaTopic {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaTopic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseKafkaTopic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaTopicInitParameters) DeepCopyInto(out *ProjectDatabaseKafkaTopicInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.MinInsyncReplicas != nil {
		in, out := &in.MinInsyncReplicas, &out.MinInsyncReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = new(float64)
		**out = **in
	}
	if in.Replication != nil {
		in, out := &in.Replication, &out.Replication
		*out = new(float64)
		**out = **in
	}
	if in.RetentionBytes != nil {
		in, out := &in.RetentionBytes, &out.RetentionBytes
		*out = new(float64)
		**out = **in
	}
	if in.RetentionHours != nil {
		in, out := &in.RetentionHours, &out.RetentionHours
		*out = new(float64)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaTopicInitParameters.
func (in *ProjectDatabaseKafkaTopicInitParameters) DeepCopy() *ProjectDatabaseKafkaTopicInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaTopicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaTopicList) DeepCopyInto(out *ProjectDatabaseKafkaTopicList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseKafkaTopic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaTopicList.
func (in *ProjectDatabaseKafkaTopicList) DeepCopy() *ProjectDatabaseKafkaTopicList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaTopicList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseKafkaTopicList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaTopicObservation) DeepCopyInto(out *ProjectDatabaseKafkaTopicObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MinInsyncReplicas != nil {
		in, out := &in.MinInsyncReplicas, &out.MinInsyncReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = new(float64)
		**out = **in
	}
	if in.Replication != nil {
		in, out := &in.Replication, &out.Replication
		*out = new(float64)
		**out = **in
	}
	if in.RetentionBytes != nil {
		in, out := &in.RetentionBytes, &out.RetentionBytes
		*out = new(float64)
		**out = **in
	}
	if in.RetentionHours != nil {
		in, out := &in.RetentionHours, &out.RetentionHours
		*out = new(float64)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaTopicObservation.
func (in *ProjectDatabaseKafkaTopicObservation) DeepCopy() *ProjectDatabaseKafkaTopicObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaTopicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaTopicParameters) DeepCopyInto(out *ProjectDatabaseKafkaTopicParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.MinInsyncReplicas != nil {
		in, out := &in.MinInsyncReplicas, &out.MinInsyncReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = new(float64)
		**out = **in
	}
	if in.Replication != nil {
		in, out := &in.Replication, &out.Replication
		*out = new(float64)
		**out = **in
	}
	if in.RetentionBytes != nil {
		in, out := &in.RetentionBytes, &out.RetentionBytes
		*out = new(float64)
		**out = **in
	}
	if in.RetentionHours != nil {
		in, out := &in.RetentionHours, &out.RetentionHours
		*out = new(float64)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaTopicParameters.
func (in *ProjectDatabaseKafkaTopicParameters) DeepCopy() *ProjectDatabaseKafkaTopicParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaTopicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaTopicSpec) DeepCopyInto(out *ProjectDatabaseKafkaTopicSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaTopicSpec.
func (in *ProjectDatabaseKafkaTopicSpec) DeepCopy() *ProjectDatabaseKafkaTopicSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaTopicSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaTopicStatus) DeepCopyInto(out *ProjectDatabaseKafkaTopicStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaTopicStatus.
func (in *ProjectDatabaseKafkaTopicStatus) DeepCopy() *ProjectDatabaseKafkaTopicStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaTopicStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseList) DeepCopyInto(out *ProjectDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseList.
func (in *ProjectDatabaseList) DeepCopy() *ProjectDatabaseList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseLogSubscription) DeepCopyInto(out *ProjectDatabaseLogSubscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseLogSubscription.
func (in *ProjectDatabaseLogSubscription) DeepCopy() *ProjectDatabaseLogSubscription {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseLogSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseLogSubscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseLogSubscriptionInitParameters) DeepCopyInto(out *ProjectDatabaseLogSubscriptionInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.StreamID != nil {
		in, out := &in.StreamID, &out.StreamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseLogSubscriptionInitParameters.
func (in *ProjectDatabaseLogSubscriptionInitParameters) DeepCopy() *ProjectDatabaseLogSubscriptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseLogSubscriptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseLogSubscriptionList) DeepCopyInto(out *ProjectDatabaseLogSubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseLogSubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseLogSubscriptionList.
func (in *ProjectDatabaseLogSubscriptionList) DeepCopy() *ProjectDatabaseLogSubscriptionList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseLogSubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseLogSubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseLogSubscriptionObservation) DeepCopyInto(out *ProjectDatabaseLogSubscriptionObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.OperationID != nil {
		in, out := &in.OperationID, &out.OperationID
		*out = new(string)
		**out = **in
	}
	if in.ResourceName != nil {
		in, out := &in.ResourceName, &out.ResourceName
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.StreamID != nil {
		in, out := &in.StreamID, &out.StreamID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseLogSubscriptionObservation.
func (in *ProjectDatabaseLogSubscriptionObservation) DeepCopy() *ProjectDatabaseLogSubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseLogSubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseLogSubscriptionParameters) DeepCopyInto(out *ProjectDatabaseLogSubscriptionParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.StreamID != nil {
		in, out := &in.StreamID, &out.StreamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseLogSubscriptionParameters.
func (in *ProjectDatabaseLogSubscriptionParameters) DeepCopy() *ProjectDatabaseLogSubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseLogSubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseLogSubscriptionSpec) DeepCopyInto(out *ProjectDatabaseLogSubscriptionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseLogSubscriptionSpec.
func (in *ProjectDatabaseLogSubscriptionSpec) DeepCopy() *ProjectDatabaseLogSubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseLogSubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseLogSubscriptionStatus) DeepCopyInto(out *ProjectDatabaseLogSubscriptionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseLogSubscriptionStatus.
func (in *ProjectDatabaseLogSubscriptionStatus) DeepCopy() *ProjectDatabaseLogSubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseLogSubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespace) DeepCopyInto(out *ProjectDatabaseM3DbNamespace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespace.
func (in *ProjectDatabaseM3DbNamespace) DeepCopy() *ProjectDatabaseM3DbNamespace {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseM3DbNamespace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespaceInitParameters) DeepCopyInto(out *ProjectDatabaseM3DbNamespaceInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Resolution != nil {
		in, out := &in.Resolution, &out.Resolution
		*out = new(string)
		**out = **in
	}
	if in.RetentionBlockDataExpirationDuration != nil {
		in, out := &in.RetentionBlockDataExpirationDuration, &out.RetentionBlockDataExpirationDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBlockSizeDuration != nil {
		in, out := &in.RetentionBlockSizeDuration, &out.RetentionBlockSizeDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBufferFutureDuration != nil {
		in, out := &in.RetentionBufferFutureDuration, &out.RetentionBufferFutureDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBufferPastDuration != nil {
		in, out := &in.RetentionBufferPastDuration, &out.RetentionBufferPastDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDuration != nil {
		in, out := &in.RetentionPeriodDuration, &out.RetentionPeriodDuration
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SnapshotEnabled != nil {
		in, out := &in.SnapshotEnabled, &out.SnapshotEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WritesToCommitLogEnabled != nil {
		in, out := &in.WritesToCommitLogEnabled, &out.WritesToCommitLogEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespaceInitParameters.
func (in *ProjectDatabaseM3DbNamespaceInitParameters) DeepCopy() *ProjectDatabaseM3DbNamespaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespaceList) DeepCopyInto(out *ProjectDatabaseM3DbNamespaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseM3DbNamespace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespaceList.
func (in *ProjectDatabaseM3DbNamespaceList) DeepCopy() *ProjectDatabaseM3DbNamespaceList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseM3DbNamespaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespaceObservation) DeepCopyInto(out *ProjectDatabaseM3DbNamespaceObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Resolution != nil {
		in, out := &in.Resolution, &out.Resolution
		*out = new(string)
		**out = **in
	}
	if in.RetentionBlockDataExpirationDuration != nil {
		in, out := &in.RetentionBlockDataExpirationDuration, &out.RetentionBlockDataExpirationDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBlockSizeDuration != nil {
		in, out := &in.RetentionBlockSizeDuration, &out.RetentionBlockSizeDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBufferFutureDuration != nil {
		in, out := &in.RetentionBufferFutureDuration, &out.RetentionBufferFutureDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBufferPastDuration != nil {
		in, out := &in.RetentionBufferPastDuration, &out.RetentionBufferPastDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDuration != nil {
		in, out := &in.RetentionPeriodDuration, &out.RetentionPeriodDuration
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SnapshotEnabled != nil {
		in, out := &in.SnapshotEnabled, &out.SnapshotEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WritesToCommitLogEnabled != nil {
		in, out := &in.WritesToCommitLogEnabled, &out.WritesToCommitLogEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespaceObservation.
func (in *ProjectDatabaseM3DbNamespaceObservation) DeepCopy() *ProjectDatabaseM3DbNamespaceObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespaceParameters) DeepCopyInto(out *ProjectDatabaseM3DbNamespaceParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Resolution != nil {
		in, out := &in.Resolution, &out.Resolution
		*out = new(string)
		**out = **in
	}
	if in.RetentionBlockDataExpirationDuration != nil {
		in, out := &in.RetentionBlockDataExpirationDuration, &out.RetentionBlockDataExpirationDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBlockSizeDuration != nil {
		in, out := &in.RetentionBlockSizeDuration, &out.RetentionBlockSizeDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBufferFutureDuration != nil {
		in, out := &in.RetentionBufferFutureDuration, &out.RetentionBufferFutureDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBufferPastDuration != nil {
		in, out := &in.RetentionBufferPastDuration, &out.RetentionBufferPastDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDuration != nil {
		in, out := &in.RetentionPeriodDuration, &out.RetentionPeriodDuration
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SnapshotEnabled != nil {
		in, out := &in.SnapshotEnabled, &out.SnapshotEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WritesToCommitLogEnabled != nil {
		in, out := &in.WritesToCommitLogEnabled, &out.WritesToCommitLogEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespaceParameters.
func (in *ProjectDatabaseM3DbNamespaceParameters) DeepCopy() *ProjectDatabaseM3DbNamespaceParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespaceSpec) DeepCopyInto(out *ProjectDatabaseM3DbNamespaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespaceSpec.
func (in *ProjectDatabaseM3DbNamespaceSpec) DeepCopy() *ProjectDatabaseM3DbNamespaceSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespaceStatus) DeepCopyInto(out *ProjectDatabaseM3DbNamespaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespaceStatus.
func (in *ProjectDatabaseM3DbNamespaceStatus) DeepCopy() *ProjectDatabaseM3DbNamespaceStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbUser) DeepCopyInto(out *ProjectDatabaseM3DbUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbUser.
func (in *ProjectDatabaseM3DbUser) DeepCopy() *ProjectDatabaseM3DbUser {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseM3DbUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbUserInitParameters) DeepCopyInto(out *ProjectDatabaseM3DbUserInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbUserInitParameters.
func (in *ProjectDatabaseM3DbUserInitParameters) DeepCopy() *ProjectDatabaseM3DbUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbUserList) DeepCopyInto(out *ProjectDatabaseM3DbUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseM3DbUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbUserList.
func (in *ProjectDatabaseM3DbUserList) DeepCopy() *ProjectDatabaseM3DbUserList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseM3DbUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbUserObservation) DeepCopyInto(out *ProjectDatabaseM3DbUserObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbUserObservation.
func (in *ProjectDatabaseM3DbUserObservation) DeepCopy() *ProjectDatabaseM3DbUserObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbUserParameters) DeepCopyInto(out *ProjectDatabaseM3DbUserParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbUserParameters.
func (in *ProjectDatabaseM3DbUserParameters) DeepCopy() *ProjectDatabaseM3DbUserParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbUserSpec) DeepCopyInto(out *ProjectDatabaseM3DbUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbUserSpec.
func (in *ProjectDatabaseM3DbUserSpec) DeepCopy() *ProjectDatabaseM3DbUserSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbUserStatus) DeepCopyInto(out *ProjectDatabaseM3DbUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbUserStatus.
func (in *ProjectDatabaseM3DbUserStatus) DeepCopy() *ProjectDatabaseM3DbUserStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbPrometheus) DeepCopyInto(out *ProjectDatabaseMongodbPrometheus) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbPrometheus.
func (in *ProjectDatabaseMongodbPrometheus) DeepCopy() *ProjectDatabaseMongodbPrometheus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbPrometheus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseMongodbPrometheus) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbPrometheusInitParameters) DeepCopyInto(out *ProjectDatabaseMongodbPrometheusInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbPrometheusInitParameters.
func (in *ProjectDatabaseMongodbPrometheusInitParameters) DeepCopy() *ProjectDatabaseMongodbPrometheusInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbPrometheusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbPrometheusList) DeepCopyInto(out *ProjectDatabaseMongodbPrometheusList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseMongodbPrometheus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbPrometheusList.
func (in *ProjectDatabaseMongodbPrometheusList) DeepCopy() *ProjectDatabaseMongodbPrometheusList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbPrometheusList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseMongodbPrometheusList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbPrometheusObservation) DeepCopyInto(out *ProjectDatabaseMongodbPrometheusObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SrvDomain != nil {
		in, out := &in.SrvDomain, &out.SrvDomain
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbPrometheusObservation.
func (in *ProjectDatabaseMongodbPrometheusObservation) DeepCopy() *ProjectDatabaseMongodbPrometheusObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbPrometheusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbPrometheusParameters) DeepCopyInto(out *ProjectDatabaseMongodbPrometheusParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbPrometheusParameters.
func (in *ProjectDatabaseMongodbPrometheusParameters) DeepCopy() *ProjectDatabaseMongodbPrometheusParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbPrometheusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbPrometheusSpec) DeepCopyInto(out *ProjectDatabaseMongodbPrometheusSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbPrometheusSpec.
func (in *ProjectDatabaseMongodbPrometheusSpec) DeepCopy() *ProjectDatabaseMongodbPrometheusSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbPrometheusSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbPrometheusStatus) DeepCopyInto(out *ProjectDatabaseMongodbPrometheusStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbPrometheusStatus.
func (in *ProjectDatabaseMongodbPrometheusStatus) DeepCopy() *ProjectDatabaseMongodbPrometheusStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbPrometheusStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbUser) DeepCopyInto(out *ProjectDatabaseMongodbUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbUser.
func (in *ProjectDatabaseMongodbUser) DeepCopy() *ProjectDatabaseMongodbUser {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseMongodbUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbUserInitParameters) DeepCopyInto(out *ProjectDatabaseMongodbUserInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbUserInitParameters.
func (in *ProjectDatabaseMongodbUserInitParameters) DeepCopy() *ProjectDatabaseMongodbUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbUserList) DeepCopyInto(out *ProjectDatabaseMongodbUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseMongodbUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbUserList.
func (in *ProjectDatabaseMongodbUserList) DeepCopy() *ProjectDatabaseMongodbUserList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseMongodbUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbUserObservation) DeepCopyInto(out *ProjectDatabaseMongodbUserObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbUserObservation.
func (in *ProjectDatabaseMongodbUserObservation) DeepCopy() *ProjectDatabaseMongodbUserObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbUserParameters) DeepCopyInto(out *ProjectDatabaseMongodbUserParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbUserParameters.
func (in *ProjectDatabaseMongodbUserParameters) DeepCopy() *ProjectDatabaseMongodbUserParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbUserSpec) DeepCopyInto(out *ProjectDatabaseMongodbUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbUserSpec.
func (in *ProjectDatabaseMongodbUserSpec) DeepCopy() *ProjectDatabaseMongodbUserSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseMongodbUserStatus) DeepCopyInto(out *ProjectDatabaseMongodbUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseMongodbUserStatus.
func (in *ProjectDatabaseMongodbUserStatus) DeepCopy() *ProjectDatabaseMongodbUserStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseMongodbUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseObservation) DeepCopyInto(out *ProjectDatabaseObservation) {
	*out = *in
	if in.AdvancedConfiguration != nil {
		in, out := &in.AdvancedConfiguration, &out.AdvancedConfiguration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.BackupRegions != nil {
		in, out := &in.BackupRegions, &out.BackupRegions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BackupTime != nil {
		in, out := &in.BackupTime, &out.BackupTime
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]EndpointsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPRestrictions != nil {
		in, out := &in.IPRestrictions, &out.IPRestrictions
		*out = make([]IPRestrictionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaRestAPI != nil {
		in, out := &in.KafkaRestAPI, &out.KafkaRestAPI
		*out = new(bool)
		**out = **in
	}
	if in.KafkaSchemaRegistry != nil {
		in, out := &in.KafkaSchemaRegistry, &out.KafkaSchemaRegistry
		*out = new(bool)
		**out = **in
	}
	if in.MaintenanceTime != nil {
		in, out := &in.MaintenanceTime, &out.MaintenanceTime
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]NodesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpensearchAclsEnabled != nil {
		in, out := &in.OpensearchAclsEnabled, &out.OpensearchAclsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseObservation.
func (in *ProjectDatabaseObservation) DeepCopy() *ProjectDatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchPattern) DeepCopyInto(out *ProjectDatabaseOpensearchPattern) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchPattern.
func (in *ProjectDatabaseOpensearchPattern) DeepCopy() *ProjectDatabaseOpensearchPattern {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchPattern)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseOpensearchPattern) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchPatternInitParameters) DeepCopyInto(out *ProjectDatabaseOpensearchPatternInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.MaxIndexCount != nil {
		in, out := &in.MaxIndexCount, &out.MaxIndexCount
		*out = new(float64)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchPatternInitParameters.
func (in *ProjectDatabaseOpensearchPatternInitParameters) DeepCopy() *ProjectDatabaseOpensearchPatternInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchPatternInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchPatternList) DeepCopyInto(out *ProjectDatabaseOpensearchPatternList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseOpensearchPattern, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchPatternList.
func (in *ProjectDatabaseOpensearchPatternList) DeepCopy() *ProjectDatabaseOpensearchPatternList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchPatternList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseOpensearchPatternList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchPatternObservation) DeepCopyInto(out *ProjectDatabaseOpensearchPatternObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaxIndexCount != nil {
		in, out := &in.MaxIndexCount, &out.MaxIndexCount
		*out = new(float64)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchPatternObservation.
func (in *ProjectDatabaseOpensearchPatternObservation) DeepCopy() *ProjectDatabaseOpensearchPatternObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchPatternObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchPatternParameters) DeepCopyInto(out *ProjectDatabaseOpensearchPatternParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.MaxIndexCount != nil {
		in, out := &in.MaxIndexCount, &out.MaxIndexCount
		*out = new(float64)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchPatternParameters.
func (in *ProjectDatabaseOpensearchPatternParameters) DeepCopy() *ProjectDatabaseOpensearchPatternParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchPatternParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchPatternSpec) DeepCopyInto(out *ProjectDatabaseOpensearchPatternSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchPatternSpec.
func (in *ProjectDatabaseOpensearchPatternSpec) DeepCopy() *ProjectDatabaseOpensearchPatternSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchPatternSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchPatternStatus) DeepCopyInto(out *ProjectDatabaseOpensearchPatternStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchPatternStatus.
func (in *ProjectDatabaseOpensearchPatternStatus) DeepCopy() *ProjectDatabaseOpensearchPatternStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchPatternStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchUser) DeepCopyInto(out *ProjectDatabaseOpensearchUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchUser.
func (in *ProjectDatabaseOpensearchUser) DeepCopy() *ProjectDatabaseOpensearchUser {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseOpensearchUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchUserInitParameters) DeepCopyInto(out *ProjectDatabaseOpensearchUserInitParameters) {
	*out = *in
	if in.Acls != nil {
		in, out := &in.Acls, &out.Acls
		*out = make([]AclsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchUserInitParameters.
func (in *ProjectDatabaseOpensearchUserInitParameters) DeepCopy() *ProjectDatabaseOpensearchUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchUserList) DeepCopyInto(out *ProjectDatabaseOpensearchUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseOpensearchUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchUserList.
func (in *ProjectDatabaseOpensearchUserList) DeepCopy() *ProjectDatabaseOpensearchUserList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseOpensearchUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchUserObservation) DeepCopyInto(out *ProjectDatabaseOpensearchUserObservation) {
	*out = *in
	if in.Acls != nil {
		in, out := &in.Acls, &out.Acls
		*out = make([]AclsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchUserObservation.
func (in *ProjectDatabaseOpensearchUserObservation) DeepCopy() *ProjectDatabaseOpensearchUserObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchUserParameters) DeepCopyInto(out *ProjectDatabaseOpensearchUserParameters) {
	*out = *in
	if in.Acls != nil {
		in, out := &in.Acls, &out.Acls
		*out = make([]AclsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchUserParameters.
func (in *ProjectDatabaseOpensearchUserParameters) DeepCopy() *ProjectDatabaseOpensearchUserParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchUserSpec) DeepCopyInto(out *ProjectDatabaseOpensearchUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchUserSpec.
func (in *ProjectDatabaseOpensearchUserSpec) DeepCopy() *ProjectDatabaseOpensearchUserSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseOpensearchUserStatus) DeepCopyInto(out *ProjectDatabaseOpensearchUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseOpensearchUserStatus.
func (in *ProjectDatabaseOpensearchUserStatus) DeepCopy() *ProjectDatabaseOpensearchUserStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseOpensearchUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseParameters) DeepCopyInto(out *ProjectDatabaseParameters) {
	*out = *in
	if in.AdvancedConfiguration != nil {
		in, out := &in.AdvancedConfiguration, &out.AdvancedConfiguration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.BackupRegions != nil {
		in, out := &in.BackupRegions, &out.BackupRegions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BackupTime != nil {
		in, out := &in.BackupTime, &out.BackupTime
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.IPRestrictions != nil {
		in, out := &in.IPRestrictions, &out.IPRestrictions
		*out = make([]IPRestrictionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaRestAPI != nil {
		in, out := &in.KafkaRestAPI, &out.KafkaRestAPI
		*out = new(bool)
		**out = **in
	}
	if in.KafkaSchemaRegistry != nil {
		in, out := &in.KafkaSchemaRegistry, &out.KafkaSchemaRegistry
		*out = new(bool)
		**out = **in
	}
	if in.MaintenanceTime != nil {
		in, out := &in.MaintenanceTime, &out.MaintenanceTime
		*out = new(string)
		**out = **in
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]NodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpensearchAclsEnabled != nil {
		in, out := &in.OpensearchAclsEnabled, &out.OpensearchAclsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseParameters.
func (in *ProjectDatabaseParameters) DeepCopy() *ProjectDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlConnectionPool) DeepCopyInto(out *ProjectDatabasePostgresqlConnectionPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlConnectionPool.
func (in *ProjectDatabasePostgresqlConnectionPool) DeepCopy() *ProjectDatabasePostgresqlConnectionPool {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlConnectionPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabasePostgresqlConnectionPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlConnectionPoolInitParameters) DeepCopyInto(out *ProjectDatabasePostgresqlConnectionPoolInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlConnectionPoolInitParameters.
func (in *ProjectDatabasePostgresqlConnectionPoolInitParameters) DeepCopy() *ProjectDatabasePostgresqlConnectionPoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlConnectionPoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlConnectionPoolList) DeepCopyInto(out *ProjectDatabasePostgresqlConnectionPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabasePostgresqlConnectionPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlConnectionPoolList.
func (in *ProjectDatabasePostgresqlConnectionPoolList) DeepCopy() *ProjectDatabasePostgresqlConnectionPoolList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlConnectionPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabasePostgresqlConnectionPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlConnectionPoolObservation) DeepCopyInto(out *ProjectDatabasePostgresqlConnectionPoolObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlConnectionPoolObservation.
func (in *ProjectDatabasePostgresqlConnectionPoolObservation) DeepCopy() *ProjectDatabasePostgresqlConnectionPoolObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlConnectionPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlConnectionPoolParameters) DeepCopyInto(out *ProjectDatabasePostgresqlConnectionPoolParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlConnectionPoolParameters.
func (in *ProjectDatabasePostgresqlConnectionPoolParameters) DeepCopy() *ProjectDatabasePostgresqlConnectionPoolParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlConnectionPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlConnectionPoolSpec) DeepCopyInto(out *ProjectDatabasePostgresqlConnectionPoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlConnectionPoolSpec.
func (in *ProjectDatabasePostgresqlConnectionPoolSpec) DeepCopy() *ProjectDatabasePostgresqlConnectionPoolSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlConnectionPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlConnectionPoolStatus) DeepCopyInto(out *ProjectDatabasePostgresqlConnectionPoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlConnectionPoolStatus.
func (in *ProjectDatabasePostgresqlConnectionPoolStatus) DeepCopy() *ProjectDatabasePostgresqlConnectionPoolStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlConnectionPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlUser) DeepCopyInto(out *ProjectDatabasePostgresqlUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlUser.
func (in *ProjectDatabasePostgresqlUser) DeepCopy() *ProjectDatabasePostgresqlUser {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabasePostgresqlUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlUserInitParameters) DeepCopyInto(out *ProjectDatabasePostgresqlUserInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlUserInitParameters.
func (in *ProjectDatabasePostgresqlUserInitParameters) DeepCopy() *ProjectDatabasePostgresqlUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlUserList) DeepCopyInto(out *ProjectDatabasePostgresqlUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabasePostgresqlUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlUserList.
func (in *ProjectDatabasePostgresqlUserList) DeepCopy() *ProjectDatabasePostgresqlUserList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabasePostgresqlUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlUserObservation) DeepCopyInto(out *ProjectDatabasePostgresqlUserObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlUserObservation.
func (in *ProjectDatabasePostgresqlUserObservation) DeepCopy() *ProjectDatabasePostgresqlUserObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlUserParameters) DeepCopyInto(out *ProjectDatabasePostgresqlUserParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlUserParameters.
func (in *ProjectDatabasePostgresqlUserParameters) DeepCopy() *ProjectDatabasePostgresqlUserParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlUserSpec) DeepCopyInto(out *ProjectDatabasePostgresqlUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlUserSpec.
func (in *ProjectDatabasePostgresqlUserSpec) DeepCopy() *ProjectDatabasePostgresqlUserSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePostgresqlUserStatus) DeepCopyInto(out *ProjectDatabasePostgresqlUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePostgresqlUserStatus.
func (in *ProjectDatabasePostgresqlUserStatus) DeepCopy() *ProjectDatabasePostgresqlUserStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePostgresqlUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePrometheus) DeepCopyInto(out *ProjectDatabasePrometheus) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePrometheus.
func (in *ProjectDatabasePrometheus) DeepCopy() *ProjectDatabasePrometheus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePrometheus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabasePrometheus) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePrometheusInitParameters) DeepCopyInto(out *ProjectDatabasePrometheusInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePrometheusInitParameters.
func (in *ProjectDatabasePrometheusInitParameters) DeepCopy() *ProjectDatabasePrometheusInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePrometheusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePrometheusList) DeepCopyInto(out *ProjectDatabasePrometheusList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabasePrometheus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePrometheusList.
func (in *ProjectDatabasePrometheusList) DeepCopy() *ProjectDatabasePrometheusList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePrometheusList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabasePrometheusList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePrometheusObservation) DeepCopyInto(out *ProjectDatabasePrometheusObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]TargetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePrometheusObservation.
func (in *ProjectDatabasePrometheusObservation) DeepCopy() *ProjectDatabasePrometheusObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePrometheusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePrometheusParameters) DeepCopyInto(out *ProjectDatabasePrometheusParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePrometheusParameters.
func (in *ProjectDatabasePrometheusParameters) DeepCopy() *ProjectDatabasePrometheusParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePrometheusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePrometheusSpec) DeepCopyInto(out *ProjectDatabasePrometheusSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePrometheusSpec.
func (in *ProjectDatabasePrometheusSpec) DeepCopy() *ProjectDatabasePrometheusSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePrometheusSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabasePrometheusStatus) DeepCopyInto(out *ProjectDatabasePrometheusStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabasePrometheusStatus.
func (in *ProjectDatabasePrometheusStatus) DeepCopy() *ProjectDatabasePrometheusStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabasePrometheusStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseRedisUser) DeepCopyInto(out *ProjectDatabaseRedisUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseRedisUser.
func (in *ProjectDatabaseRedisUser) DeepCopy() *ProjectDatabaseRedisUser {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseRedisUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseRedisUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseRedisUserInitParameters) DeepCopyInto(out *ProjectDatabaseRedisUserInitParameters) {
	*out = *in
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseRedisUserInitParameters.
func (in *ProjectDatabaseRedisUserInitParameters) DeepCopy() *ProjectDatabaseRedisUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseRedisUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseRedisUserList) DeepCopyInto(out *ProjectDatabaseRedisUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseRedisUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseRedisUserList.
func (in *ProjectDatabaseRedisUserList) DeepCopy() *ProjectDatabaseRedisUserList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseRedisUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseRedisUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseRedisUserObservation) DeepCopyInto(out *ProjectDatabaseRedisUserObservation) {
	*out = *in
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseRedisUserObservation.
func (in *ProjectDatabaseRedisUserObservation) DeepCopy() *ProjectDatabaseRedisUserObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseRedisUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseRedisUserParameters) DeepCopyInto(out *ProjectDatabaseRedisUserParameters) {
	*out = *in
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseRedisUserParameters.
func (in *ProjectDatabaseRedisUserParameters) DeepCopy() *ProjectDatabaseRedisUserParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseRedisUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseRedisUserSpec) DeepCopyInto(out *ProjectDatabaseRedisUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseRedisUserSpec.
func (in *ProjectDatabaseRedisUserSpec) DeepCopy() *ProjectDatabaseRedisUserSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseRedisUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseRedisUserStatus) DeepCopyInto(out *ProjectDatabaseRedisUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseRedisUserStatus.
func (in *ProjectDatabaseRedisUserStatus) DeepCopy() *ProjectDatabaseRedisUserStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseRedisUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseSpec) DeepCopyInto(out *ProjectDatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseSpec.
func (in *ProjectDatabaseSpec) DeepCopy() *ProjectDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseStatus) DeepCopyInto(out *ProjectDatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseStatus.
func (in *ProjectDatabaseStatus) DeepCopy() *ProjectDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseUser) DeepCopyInto(out *ProjectDatabaseUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseUser.
func (in *ProjectDatabaseUser) DeepCopy() *ProjectDatabaseUser {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseUserInitParameters) DeepCopyInto(out *ProjectDatabaseUserInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseUserInitParameters.
func (in *ProjectDatabaseUserInitParameters) DeepCopy() *ProjectDatabaseUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseUserList) DeepCopyInto(out *ProjectDatabaseUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseUserList.
func (in *ProjectDatabaseUserList) DeepCopy() *ProjectDatabaseUserList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseUserObservation) DeepCopyInto(out *ProjectDatabaseUserObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseUserObservation.
func (in *ProjectDatabaseUserObservation) DeepCopy() *ProjectDatabaseUserObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseUserParameters) DeepCopyInto(out *ProjectDatabaseUserParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseUserParameters.
func (in *ProjectDatabaseUserParameters) DeepCopy() *ProjectDatabaseUserParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseUserSpec) DeepCopyInto(out *ProjectDatabaseUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseUserSpec.
func (in *ProjectDatabaseUserSpec) DeepCopy() *ProjectDatabaseUserSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseUserStatus) DeepCopyInto(out *ProjectDatabaseUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseUserStatus.
func (in *ProjectDatabaseUserStatus) DeepCopy() *ProjectDatabaseUserStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseValkeyUser) DeepCopyInto(out *ProjectDatabaseValkeyUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseValkeyUser.
func (in *ProjectDatabaseValkeyUser) DeepCopy() *ProjectDatabaseValkeyUser {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseValkeyUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseValkeyUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseValkeyUserInitParameters) DeepCopyInto(out *ProjectDatabaseValkeyUserInitParameters) {
	*out = *in
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseValkeyUserInitParameters.
func (in *ProjectDatabaseValkeyUserInitParameters) DeepCopy() *ProjectDatabaseValkeyUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseValkeyUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseValkeyUserList) DeepCopyInto(out *ProjectDatabaseValkeyUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseValkeyUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseValkeyUserList.
func (in *ProjectDatabaseValkeyUserList) DeepCopy() *ProjectDatabaseValkeyUserList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseValkeyUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseValkeyUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseValkeyUserObservation) DeepCopyInto(out *ProjectDatabaseValkeyUserObservation) {
	*out = *in
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseValkeyUserObservation.
func (in *ProjectDatabaseValkeyUserObservation) DeepCopy() *ProjectDatabaseValkeyUserObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseValkeyUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseValkeyUserParameters) DeepCopyInto(out *ProjectDatabaseValkeyUserParameters) {
	*out = *in
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseValkeyUserParameters.
func (in *ProjectDatabaseValkeyUserParameters) DeepCopy() *ProjectDatabaseValkeyUserParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseValkeyUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseValkeyUserSpec) DeepCopyInto(out *ProjectDatabaseValkeyUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseValkeyUserSpec.
func (in *ProjectDatabaseValkeyUserSpec) DeepCopy() *ProjectDatabaseValkeyUserSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseValkeyUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseValkeyUserStatus) DeepCopyInto(out *ProjectDatabaseValkeyUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseValkeyUserStatus.
func (in *ProjectDatabaseValkeyUserStatus) DeepCopy() *ProjectDatabaseValkeyUserStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseValkeyUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFailoverIPAttach) DeepCopyInto(out *ProjectFailoverIPAttach) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFailoverIPAttach.
func (in *ProjectFailoverIPAttach) DeepCopy() *ProjectFailoverIPAttach {
	if in == nil {
		return nil
	}
	out := new(ProjectFailoverIPAttach)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectFailoverIPAttach) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFailoverIPAttachInitParameters) DeepCopyInto(out *ProjectFailoverIPAttachInitParameters) {
	*out = *in
	if in.Block != nil {
		in, out := &in.Block, &out.Block
		*out = new(string)
		**out = **in
	}
	if in.ContinentCode != nil {
		in, out := &in.ContinentCode, &out.ContinentCode
		*out = new(string)
		**out = **in
	}
	if in.GeoLoc != nil {
		in, out := &in.GeoLoc, &out.GeoLoc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.RoutedTo != nil {
		in, out := &in.RoutedTo, &out.RoutedTo
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFailoverIPAttachInitParameters.
func (in *ProjectFailoverIPAttachInitParameters) DeepCopy() *ProjectFailoverIPAttachInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectFailoverIPAttachInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFailoverIPAttachList) DeepCopyInto(out *ProjectFailoverIPAttachList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectFailoverIPAttach, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFailoverIPAttachList.
func (in *ProjectFailoverIPAttachList) DeepCopy() *ProjectFailoverIPAttachList {
	if in == nil {
		return nil
	}
	out := new(ProjectFailoverIPAttachList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectFailoverIPAttachList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFailoverIPAttachObservation) DeepCopyInto(out *ProjectFailoverIPAttachObservation) {
	*out = *in
	if in.Block != nil {
		in, out := &in.Block, &out.Block
		*out = new(string)
		**out = **in
	}
	if in.ContinentCode != nil {
		in, out := &in.ContinentCode, &out.ContinentCode
		*out = new(string)
		**out = **in
	}
	if in.GeoLoc != nil {
		in, out := &in.GeoLoc, &out.GeoLoc
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Progress != nil {
		in, out := &in.Progress, &out.Progress
		*out = new(float64)
		**out = **in
	}
	if in.RoutedTo != nil {
		in, out := &in.RoutedTo, &out.RoutedTo
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubType != nil {
		in, out := &in.SubType, &out.SubType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFailoverIPAttachObservation.
func (in *ProjectFailoverIPAttachObservation) DeepCopy() *ProjectFailoverIPAttachObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectFailoverIPAttachObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFailoverIPAttachParameters) DeepCopyInto(out *ProjectFailoverIPAttachParameters) {
	*out = *in
	if in.Block != nil {
		in, out := &in.Block, &out.Block
		*out = new(string)
		**out = **in
	}
	if in.ContinentCode != nil {
		in, out := &in.ContinentCode, &out.ContinentCode
		*out = new(string)
		**out = **in
	}
	if in.GeoLoc != nil {
		in, out := &in.GeoLoc, &out.GeoLoc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.RoutedTo != nil {
		in, out := &in.RoutedTo, &out.RoutedTo
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFailoverIPAttachParameters.
func (in *ProjectFailoverIPAttachParameters) DeepCopy() *ProjectFailoverIPAttachParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectFailoverIPAttachParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFailoverIPAttachSpec) DeepCopyInto(out *ProjectFailoverIPAttachSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFailoverIPAttachSpec.
func (in *ProjectFailoverIPAttachSpec) DeepCopy() *ProjectFailoverIPAttachSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectFailoverIPAttachSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFailoverIPAttachStatus) DeepCopyInto(out *ProjectFailoverIPAttachStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFailoverIPAttachStatus.
func (in *ProjectFailoverIPAttachStatus) DeepCopy() *ProjectFailoverIPAttachStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectFailoverIPAttachStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGateway) DeepCopyInto(out *ProjectGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGateway.
func (in *ProjectGateway) DeepCopy() *ProjectGateway {
	if in == nil {
		return nil
	}
	out := new(ProjectGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewayInitParameters) DeepCopyInto(out *ProjectGatewayInitParameters) {
	*out = *in
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewayInitParameters.
func (in *ProjectGatewayInitParameters) DeepCopy() *ProjectGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewayInterface) DeepCopyInto(out *ProjectGatewayInterface) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewayInterface.
func (in *ProjectGatewayInterface) DeepCopy() *ProjectGatewayInterface {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewayInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectGatewayInterface) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewayInterfaceInitParameters) DeepCopyInto(out *ProjectGatewayInterfaceInitParameters) {
	*out = *in
	if in.InterfaceID != nil {
		in, out := &in.InterfaceID, &out.InterfaceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewayInterfaceInitParameters.
func (in *ProjectGatewayInterfaceInitParameters) DeepCopy() *ProjectGatewayInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewayInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewayInterfaceList) DeepCopyInto(out *ProjectGatewayInterfaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectGatewayInterface, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewayInterfaceList.
func (in *ProjectGatewayInterfaceList) DeepCopy() *ProjectGatewayInterfaceList {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewayInterfaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectGatewayInterfaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewayInterfaceObservation) DeepCopyInto(out *ProjectGatewayInterfaceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.InterfaceID != nil {
		in, out := &in.InterfaceID, &out.InterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewayInterfaceObservation.
func (in *ProjectGatewayInterfaceObservation) DeepCopy() *ProjectGatewayInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewayInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewayInterfaceParameters) DeepCopyInto(out *ProjectGatewayInterfaceParameters) {
	*out = *in
	if in.InterfaceID != nil {
		in, out := &in.InterfaceID, &out.InterfaceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewayInterfaceParameters.
func (in *ProjectGatewayInterfaceParameters) DeepCopy() *ProjectGatewayInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewayInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewayInterfaceSpec) DeepCopyInto(out *ProjectGatewayInterfaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewayInterfaceSpec.
func (in *ProjectGatewayInterfaceSpec) DeepCopy() *ProjectGatewayInterfaceSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewayInterfaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewayInterfaceStatus) DeepCopyInto(out *ProjectGatewayInterfaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewayInterfaceStatus.
func (in *ProjectGatewayInterfaceStatus) DeepCopy() *ProjectGatewayInterfaceStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewayInterfaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewayList) DeepCopyInto(out *ProjectGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewayList.
func (in *ProjectGatewayList) DeepCopy() *ProjectGatewayList {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewayObservation) DeepCopyInto(out *ProjectGatewayObservation) {
	*out = *in
	if in.ExternalInformation != nil {
		in, out := &in.ExternalInformation, &out.ExternalInformation
		*out = make([]ExternalInformationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Interfaces != nil {
		in, out := &in.Interfaces, &out.Interfaces
		*out = make([]InterfacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewayObservation.
func (in *ProjectGatewayObservation) DeepCopy() *ProjectGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewayParameters) DeepCopyInto(out *ProjectGatewayParameters) {
	*out = *in
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewayParameters.
func (in *ProjectGatewayParameters) DeepCopy() *ProjectGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewaySpec) DeepCopyInto(out *ProjectGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewaySpec.
func (in *ProjectGatewaySpec) DeepCopy() *ProjectGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectGatewayStatus) DeepCopyInto(out *ProjectGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectGatewayStatus.
func (in *ProjectGatewayStatus) DeepCopy() *ProjectGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInitParameters) DeepCopyInto(out *ProjectInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = make([]OrderInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.OvhSubsidiary != nil {
		in, out := &in.OvhSubsidiary, &out.OvhSubsidiary
		*out = new(string)
		**out = **in
	}
	if in.PaymentMean != nil {
		in, out := &in.PaymentMean, &out.PaymentMean
		*out = new(string)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = make([]PlanInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlanOption != nil {
		in, out := &in.PlanOption, &out.PlanOption
		*out = make([]PlanOptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInitParameters.
func (in *ProjectInitParameters) DeepCopy() *ProjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstance) DeepCopyInto(out *ProjectInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstance.
func (in *ProjectInstance) DeepCopy() *ProjectInstance {
	if in == nil {
		return nil
	}
	out := new(ProjectInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceInitParameters) DeepCopyInto(out *ProjectInstanceInitParameters) {
	*out = *in
	if in.AutoBackup != nil {
		in, out := &in.AutoBackup, &out.AutoBackup
		*out = make([]AutoBackupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BillingPeriod != nil {
		in, out := &in.BillingPeriod, &out.BillingPeriod
		*out = new(string)
		**out = **in
	}
	if in.BootFrom != nil {
		in, out := &in.BootFrom, &out.BootFrom
		*out = make([]BootFromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Bulk != nil {
		in, out := &in.Bulk, &out.Bulk
		*out = new(float64)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = make([]FlavorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = make([]GroupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = make([]SSHKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHKeyCreate != nil {
		in, out := &in.SSHKeyCreate, &out.SSHKeyCreate
		*out = make([]SSHKeyCreateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceInitParameters.
func (in *ProjectInstanceInitParameters) DeepCopy() *ProjectInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceList) DeepCopyInto(out *ProjectInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceList.
func (in *ProjectInstanceList) DeepCopy() *ProjectInstanceList {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceObservation) DeepCopyInto(out *ProjectInstanceObservation) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]AddressesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AttachedVolumes != nil {
		in, out := &in.AttachedVolumes, &out.AttachedVolumes
		*out = make([]AttachedVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoBackup != nil {
		in, out := &in.AutoBackup, &out.AutoBackup
		*out = make([]AutoBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BillingPeriod != nil {
		in, out := &in.BillingPeriod, &out.BillingPeriod
		*out = new(string)
		**out = **in
	}
	if in.BootFrom != nil {
		in, out := &in.BootFrom, &out.BootFrom
		*out = make([]BootFromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Bulk != nil {
		in, out := &in.Bulk, &out.Bulk
		*out = new(float64)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = make([]FlavorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FlavorID != nil {
		in, out := &in.FlavorID, &out.FlavorID
		*out = new(string)
		**out = **in
	}
	if in.FlavorName != nil {
		in, out := &in.FlavorName, &out.FlavorName
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = make([]GroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = make([]SSHKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHKeyCreate != nil {
		in, out := &in.SSHKeyCreate, &out.SSHKeyCreate
		*out = make([]SSHKeyCreateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TaskState != nil {
		in, out := &in.TaskState, &out.TaskState
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceObservation.
func (in *ProjectInstanceObservation) DeepCopy() *ProjectInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceParameters) DeepCopyInto(out *ProjectInstanceParameters) {
	*out = *in
	if in.AutoBackup != nil {
		in, out := &in.AutoBackup, &out.AutoBackup
		*out = make([]AutoBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BillingPeriod != nil {
		in, out := &in.BillingPeriod, &out.BillingPeriod
		*out = new(string)
		**out = **in
	}
	if in.BootFrom != nil {
		in, out := &in.BootFrom, &out.BootFrom
		*out = make([]BootFromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Bulk != nil {
		in, out := &in.Bulk, &out.Bulk
		*out = new(float64)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = make([]FlavorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = make([]GroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = make([]SSHKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHKeyCreate != nil {
		in, out := &in.SSHKeyCreate, &out.SSHKeyCreate
		*out = make([]SSHKeyCreateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceParameters.
func (in *ProjectInstanceParameters) DeepCopy() *ProjectInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceSnapshot) DeepCopyInto(out *ProjectInstanceSnapshot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceSnapshot.
func (in *ProjectInstanceSnapshot) DeepCopy() *ProjectInstanceSnapshot {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceSnapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectInstanceSnapshot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceSnapshotInitParameters) DeepCopyInto(out *ProjectInstanceSnapshotInitParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceSnapshotInitParameters.
func (in *ProjectInstanceSnapshotInitParameters) DeepCopy() *ProjectInstanceSnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceSnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceSnapshotList) DeepCopyInto(out *ProjectInstanceSnapshotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectInstanceSnapshot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceSnapshotList.
func (in *ProjectInstanceSnapshotList) DeepCopy() *ProjectInstanceSnapshotList {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceSnapshotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectInstanceSnapshotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceSnapshotObservation) DeepCopyInto(out *ProjectInstanceSnapshotObservation) {
	*out = *in
	if in.CreationDate != nil {
		in, out := &in.CreationDate, &out.CreationDate
		*out = new(string)
		**out = **in
	}
	if in.FlavorType != nil {
		in, out := &in.FlavorType, &out.FlavorType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.MinDisk != nil {
		in, out := &in.MinDisk, &out.MinDisk
		*out = new(float64)
		**out = **in
	}
	if in.MinRAM != nil {
		in, out := &in.MinRAM, &out.MinRAM
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PlanCode != nil {
		in, out := &in.PlanCode, &out.PlanCode
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceSnapshotObservation.
func (in *ProjectInstanceSnapshotObservation) DeepCopy() *ProjectInstanceSnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceSnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceSnapshotParameters) DeepCopyInto(out *ProjectInstanceSnapshotParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceSnapshotParameters.
func (in *ProjectInstanceSnapshotParameters) DeepCopy() *ProjectInstanceSnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceSnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceSnapshotSpec) DeepCopyInto(out *ProjectInstanceSnapshotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceSnapshotSpec.
func (in *ProjectInstanceSnapshotSpec) DeepCopy() *ProjectInstanceSnapshotSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceSnapshotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceSnapshotStatus) DeepCopyInto(out *ProjectInstanceSnapshotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceSnapshotStatus.
func (in *ProjectInstanceSnapshotStatus) DeepCopy() *ProjectInstanceSnapshotStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceSnapshotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceSpec) DeepCopyInto(out *ProjectInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceSpec.
func (in *ProjectInstanceSpec) DeepCopy() *ProjectInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInstanceStatus) DeepCopyInto(out *ProjectInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInstanceStatus.
func (in *ProjectInstanceStatus) DeepCopy() *ProjectInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKube) DeepCopyInto(out *ProjectKube) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKube.
func (in *ProjectKube) DeepCopy() *ProjectKube {
	if in == nil {
		return nil
	}
	out := new(ProjectKube)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectKube) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeInitParameters) DeepCopyInto(out *ProjectKubeInitParameters) {
	*out = *in
	if in.Customization != nil {
		in, out := &in.Customization, &out.Customization
		*out = make([]CustomizationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomizationApiserver != nil {
		in, out := &in.CustomizationApiserver, &out.CustomizationApiserver
		*out = make([]CustomizationApiserverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomizationKubeProxy != nil {
		in, out := &in.CustomizationKubeProxy, &out.CustomizationKubeProxy
		*out = make([]CustomizationKubeProxyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeProxyMode != nil {
		in, out := &in.KubeProxyMode, &out.KubeProxyMode
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancersSubnetID != nil {
		in, out := &in.LoadBalancersSubnetID, &out.LoadBalancersSubnetID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodesSubnetID != nil {
		in, out := &in.NodesSubnetID, &out.NodesSubnetID
		*out = new(string)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
	if in.PrivateNetworkConfiguration != nil {
		in, out := &in.PrivateNetworkConfiguration, &out.PrivateNetworkConfiguration
		*out = make([]PrivateNetworkConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateNetworkID != nil {
		in, out := &in.PrivateNetworkID, &out.PrivateNetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeInitParameters.
func (in *ProjectKubeInitParameters) DeepCopy() *ProjectKubeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeIprestrictions) DeepCopyInto(out *ProjectKubeIprestrictions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeIprestrictions.
func (in *ProjectKubeIprestrictions) DeepCopy() *ProjectKubeIprestrictions {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeIprestrictions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectKubeIprestrictions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeIprestrictionsInitParameters) DeepCopyInto(out *ProjectKubeIprestrictionsInitParameters) {
	*out = *in
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KubeID != nil {
		in, out := &in.KubeID, &out.KubeID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeIprestrictionsInitParameters.
func (in *ProjectKubeIprestrictionsInitParameters) DeepCopy() *ProjectKubeIprestrictionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeIprestrictionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeIprestrictionsList) DeepCopyInto(out *ProjectKubeIprestrictionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectKubeIprestrictions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeIprestrictionsList.
func (in *ProjectKubeIprestrictionsList) DeepCopy() *ProjectKubeIprestrictionsList {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeIprestrictionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectKubeIprestrictionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeIprestrictionsObservation) DeepCopyInto(out *ProjectKubeIprestrictionsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KubeID != nil {
		in, out := &in.KubeID, &out.KubeID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeIprestrictionsObservation.
func (in *ProjectKubeIprestrictionsObservation) DeepCopy() *ProjectKubeIprestrictionsObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeIprestrictionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeIprestrictionsParameters) DeepCopyInto(out *ProjectKubeIprestrictionsParameters) {
	*out = *in
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KubeID != nil {
		in, out := &in.KubeID, &out.KubeID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeIprestrictionsParameters.
func (in *ProjectKubeIprestrictionsParameters) DeepCopy() *ProjectKubeIprestrictionsParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeIprestrictionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeIprestrictionsSpec) DeepCopyInto(out *ProjectKubeIprestrictionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeIprestrictionsSpec.
func (in *ProjectKubeIprestrictionsSpec) DeepCopy() *ProjectKubeIprestrictionsSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeIprestrictionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeIprestrictionsStatus) DeepCopyInto(out *ProjectKubeIprestrictionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeIprestrictionsStatus.
func (in *ProjectKubeIprestrictionsStatus) DeepCopy() *ProjectKubeIprestrictionsStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeIprestrictionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeList) DeepCopyInto(out *ProjectKubeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectKube, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeList.
func (in *ProjectKubeList) DeepCopy() *ProjectKubeList {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectKubeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeNodepool) DeepCopyInto(out *ProjectKubeNodepool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeNodepool.
func (in *ProjectKubeNodepool) DeepCopy() *ProjectKubeNodepool {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeNodepool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectKubeNodepool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeNodepoolInitParameters) DeepCopyInto(out *ProjectKubeNodepoolInitParameters) {
	*out = *in
	if in.AntiAffinity != nil {
		in, out := &in.AntiAffinity, &out.AntiAffinity
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = new(bool)
		**out = **in
	}
	if in.AutoscalingScaleDownUnneededTimeSeconds != nil {
		in, out := &in.AutoscalingScaleDownUnneededTimeSeconds, &out.AutoscalingScaleDownUnneededTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.AutoscalingScaleDownUnreadyTimeSeconds != nil {
		in, out := &in.AutoscalingScaleDownUnreadyTimeSeconds, &out.AutoscalingScaleDownUnreadyTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.AutoscalingScaleDownUtilizationThreshold != nil {
		in, out := &in.AutoscalingScaleDownUtilizationThreshold, &out.AutoscalingScaleDownUtilizationThreshold
		*out = new(float64)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DesiredNodes != nil {
		in, out := &in.DesiredNodes, &out.DesiredNodes
		*out = new(float64)
		**out = **in
	}
	if in.FlavorName != nil {
		in, out := &in.FlavorName, &out.FlavorName
		*out = new(string)
		**out = **in
	}
	if in.KubeID != nil {
		in, out := &in.KubeID, &out.KubeID
		*out = new(string)
		**out = **in
	}
	if in.MaxNodes != nil {
		in, out := &in.MaxNodes, &out.MaxNodes
		*out = new(float64)
		**out = **in
	}
	if in.MinNodes != nil {
		in, out := &in.MinNodes, &out.MinNodes
		*out = new(float64)
		**out = **in
	}
	if in.MonthlyBilled != nil {
		in, out := &in.MonthlyBilled, &out.MonthlyBilled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]TemplateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeNodepoolInitParameters.
func (in *ProjectKubeNodepoolInitParameters) DeepCopy() *ProjectKubeNodepoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeNodepoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeNodepoolList) DeepCopyInto(out *ProjectKubeNodepoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectKubeNodepool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeNodepoolList.
func (in *ProjectKubeNodepoolList) DeepCopy() *ProjectKubeNodepoolList {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeNodepoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectKubeNodepoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeNodepoolObservation) DeepCopyInto(out *ProjectKubeNodepoolObservation) {
	*out = *in
	if in.AntiAffinity != nil {
		in, out := &in.AntiAffinity, &out.AntiAffinity
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = new(bool)
		**out = **in
	}
	if in.AutoscalingScaleDownUnneededTimeSeconds != nil {
		in, out := &in.AutoscalingScaleDownUnneededTimeSeconds, &out.AutoscalingScaleDownUnneededTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.AutoscalingScaleDownUnreadyTimeSeconds != nil {
		in, out := &in.AutoscalingScaleDownUnreadyTimeSeconds, &out.AutoscalingScaleDownUnreadyTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.AutoscalingScaleDownUtilizationThreshold != nil {
		in, out := &in.AutoscalingScaleDownUtilizationThreshold, &out.AutoscalingScaleDownUtilizationThreshold
		*out = new(float64)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AvailableNodes != nil {
		in, out := &in.AvailableNodes, &out.AvailableNodes
		*out = new(float64)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.CurrentNodes != nil {
		in, out := &in.CurrentNodes, &out.CurrentNodes
		*out = new(float64)
		**out = **in
	}
	if in.DesiredNodes != nil {
		in, out := &in.DesiredNodes, &out.DesiredNodes
		*out = new(float64)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.FlavorName != nil {
		in, out := &in.FlavorName, &out.FlavorName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KubeID != nil {
		in, out := &in.KubeID, &out.KubeID
		*out = new(string)
		**out = **in
	}
	if in.MaxNodes != nil {
		in, out := &in.MaxNodes, &out.MaxNodes
		*out = new(float64)
		**out = **in
	}
	if in.MinNodes != nil {
		in, out := &in.MinNodes, &out.MinNodes
		*out = new(float64)
		**out = **in
	}
	if in.MonthlyBilled != nil {
		in, out := &in.MonthlyBilled, &out.MonthlyBilled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SizeStatus != nil {
		in, out := &in.SizeStatus, &out.SizeStatus
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]TemplateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpToDateNodes != nil {
		in, out := &in.UpToDateNodes, &out.UpToDateNodes
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeNodepoolObservation.
func (in *ProjectKubeNodepoolObservation) DeepCopy() *ProjectKubeNodepoolObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeNodepoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeNodepoolParameters) DeepCopyInto(out *ProjectKubeNodepoolParameters) {
	*out = *in
	if in.AntiAffinity != nil {
		in, out := &in.AntiAffinity, &out.AntiAffinity
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = new(bool)
		**out = **in
	}
	if in.AutoscalingScaleDownUnneededTimeSeconds != nil {
		in, out := &in.AutoscalingScaleDownUnneededTimeSeconds, &out.AutoscalingScaleDownUnneededTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.AutoscalingScaleDownUnreadyTimeSeconds != nil {
		in, out := &in.AutoscalingScaleDownUnreadyTimeSeconds, &out.AutoscalingScaleDownUnreadyTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.AutoscalingScaleDownUtilizationThreshold != nil {
		in, out := &in.AutoscalingScaleDownUtilizationThreshold, &out.AutoscalingScaleDownUtilizationThreshold
		*out = new(float64)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DesiredNodes != nil {
		in, out := &in.DesiredNodes, &out.DesiredNodes
		*out = new(float64)
		**out = **in
	}
	if in.FlavorName != nil {
		in, out := &in.FlavorName, &out.FlavorName
		*out = new(string)
		**out = **in
	}
	if in.KubeID != nil {
		in, out := &in.KubeID, &out.KubeID
		*out = new(string)
		**out = **in
	}
	if in.MaxNodes != nil {
		in, out := &in.MaxNodes, &out.MaxNodes
		*out = new(float64)
		**out = **in
	}
	if in.MinNodes != nil {
		in, out := &in.MinNodes, &out.MinNodes
		*out = new(float64)
		**out = **in
	}
	if in.MonthlyBilled != nil {
		in, out := &in.MonthlyBilled, &out.MonthlyBilled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]TemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeNodepoolParameters.
func (in *ProjectKubeNodepoolParameters) DeepCopy() *ProjectKubeNodepoolParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeNodepoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeNodepoolSpec) DeepCopyInto(out *ProjectKubeNodepoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeNodepoolSpec.
func (in *ProjectKubeNodepoolSpec) DeepCopy() *ProjectKubeNodepoolSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeNodepoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeNodepoolStatus) DeepCopyInto(out *ProjectKubeNodepoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeNodepoolStatus.
func (in *ProjectKubeNodepoolStatus) DeepCopy() *ProjectKubeNodepoolStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeNodepoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeObservation) DeepCopyInto(out *ProjectKubeObservation) {
	*out = *in
	if in.ControlPlaneIsUpToDate != nil {
		in, out := &in.ControlPlaneIsUpToDate, &out.ControlPlaneIsUpToDate
		*out = new(bool)
		**out = **in
	}
	if in.Customization != nil {
		in, out := &in.Customization, &out.Customization
		*out = make([]CustomizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomizationApiserver != nil {
		in, out := &in.CustomizationApiserver, &out.CustomizationApiserver
		*out = make([]CustomizationApiserverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomizationKubeProxy != nil {
		in, out := &in.CustomizationKubeProxy, &out.CustomizationKubeProxy
		*out = make([]CustomizationKubeProxyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsUpToDate != nil {
		in, out := &in.IsUpToDate, &out.IsUpToDate
		*out = new(bool)
		**out = **in
	}
	if in.KubeProxyMode != nil {
		in, out := &in.KubeProxyMode, &out.KubeProxyMode
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancersSubnetID != nil {
		in, out := &in.LoadBalancersSubnetID, &out.LoadBalancersSubnetID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NextUpgradeVersions != nil {
		in, out := &in.NextUpgradeVersions, &out.NextUpgradeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NodesSubnetID != nil {
		in, out := &in.NodesSubnetID, &out.NodesSubnetID
		*out = new(string)
		**out = **in
	}
	if in.NodesURL != nil {
		in, out := &in.NodesURL, &out.NodesURL
		*out = new(string)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
	if in.PrivateNetworkConfiguration != nil {
		in, out := &in.PrivateNetworkConfiguration, &out.PrivateNetworkConfiguration
		*out = make([]PrivateNetworkConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateNetworkID != nil {
		in, out := &in.PrivateNetworkID, &out.PrivateNetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeObservation.
func (in *ProjectKubeObservation) DeepCopy() *ProjectKubeObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeOidc) DeepCopyInto(out *ProjectKubeOidc) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeOidc.
func (in *ProjectKubeOidc) DeepCopy() *ProjectKubeOidc {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeOidc)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectKubeOidc) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeOidcInitParameters) DeepCopyInto(out *ProjectKubeOidcInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.IssuerURL != nil {
		in, out := &in.IssuerURL, &out.IssuerURL
		*out = new(string)
		**out = **in
	}
	if in.KubeID != nil {
		in, out := &in.KubeID, &out.KubeID
		*out = new(string)
		**out = **in
	}
	if in.OidcCAContent != nil {
		in, out := &in.OidcCAContent, &out.OidcCAContent
		*out = new(string)
		**out = **in
	}
	if in.OidcGroupsClaim != nil {
		in, out := &in.OidcGroupsClaim, &out.OidcGroupsClaim
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OidcGroupsPrefix != nil {
		in, out := &in.OidcGroupsPrefix, &out.OidcGroupsPrefix
		*out = new(string)
		**out = **in
	}
	if in.OidcRequiredClaim != nil {
		in, out := &in.OidcRequiredClaim, &out.OidcRequiredClaim
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OidcSigningAlgs != nil {
		in, out := &in.OidcSigningAlgs, &out.OidcSigningAlgs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OidcUsernameClaim != nil {
		in, out := &in.OidcUsernameClaim, &out.OidcUsernameClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcUsernamePrefix != nil {
		in, out := &in.OidcUsernamePrefix, &out.OidcUsernamePrefix
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeOidcInitParameters.
func (in *ProjectKubeOidcInitParameters) DeepCopy() *ProjectKubeOidcInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeOidcInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeOidcList) DeepCopyInto(out *ProjectKubeOidcList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectKubeOidc, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeOidcList.
func (in *ProjectKubeOidcList) DeepCopy() *ProjectKubeOidcList {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeOidcList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectKubeOidcList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeOidcObservation) DeepCopyInto(out *ProjectKubeOidcObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IssuerURL != nil {
		in, out := &in.IssuerURL, &out.IssuerURL
		*out = new(string)
		**out = **in
	}
	if in.KubeID != nil {
		in, out := &in.KubeID, &out.KubeID
		*out = new(string)
		**out = **in
	}
	if in.OidcCAContent != nil {
		in, out := &in.OidcCAContent, &out.OidcCAContent
		*out = new(string)
		**out = **in
	}
	if in.OidcGroupsClaim != nil {
		in, out := &in.OidcGroupsClaim, &out.OidcGroupsClaim
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OidcGroupsPrefix != nil {
		in, out := &in.OidcGroupsPrefix, &out.OidcGroupsPrefix
		*out = new(string)
		**out = **in
	}
	if in.OidcRequiredClaim != nil {
		in, out := &in.OidcRequiredClaim, &out.OidcRequiredClaim
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OidcSigningAlgs != nil {
		in, out := &in.OidcSigningAlgs, &out.OidcSigningAlgs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OidcUsernameClaim != nil {
		in, out := &in.OidcUsernameClaim, &out.OidcUsernameClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcUsernamePrefix != nil {
		in, out := &in.OidcUsernamePrefix, &out.OidcUsernamePrefix
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeOidcObservation.
func (in *ProjectKubeOidcObservation) DeepCopy() *ProjectKubeOidcObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeOidcObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeOidcParameters) DeepCopyInto(out *ProjectKubeOidcParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.IssuerURL != nil {
		in, out := &in.IssuerURL, &out.IssuerURL
		*out = new(string)
		**out = **in
	}
	if in.KubeID != nil {
		in, out := &in.KubeID, &out.KubeID
		*out = new(string)
		**out = **in
	}
	if in.OidcCAContent != nil {
		in, out := &in.OidcCAContent, &out.OidcCAContent
		*out = new(string)
		**out = **in
	}
	if in.OidcGroupsClaim != nil {
		in, out := &in.OidcGroupsClaim, &out.OidcGroupsClaim
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OidcGroupsPrefix != nil {
		in, out := &in.OidcGroupsPrefix, &out.OidcGroupsPrefix
		*out = new(string)
		**out = **in
	}
	if in.OidcRequiredClaim != nil {
		in, out := &in.OidcRequiredClaim, &out.OidcRequiredClaim
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OidcSigningAlgs != nil {
		in, out := &in.OidcSigningAlgs, &out.OidcSigningAlgs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OidcUsernameClaim != nil {
		in, out := &in.OidcUsernameClaim, &out.OidcUsernameClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcUsernamePrefix != nil {
		in, out := &in.OidcUsernamePrefix, &out.OidcUsernamePrefix
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeOidcParameters.
func (in *ProjectKubeOidcParameters) DeepCopy() *ProjectKubeOidcParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeOidcParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeOidcSpec) DeepCopyInto(out *ProjectKubeOidcSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeOidcSpec.
func (in *ProjectKubeOidcSpec) DeepCopy() *ProjectKubeOidcSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeOidcSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeOidcStatus) DeepCopyInto(out *ProjectKubeOidcStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeOidcStatus.
func (in *ProjectKubeOidcStatus) DeepCopy() *ProjectKubeOidcStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeOidcStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeParameters) DeepCopyInto(out *ProjectKubeParameters) {
	*out = *in
	if in.Customization != nil {
		in, out := &in.Customization, &out.Customization
		*out = make([]CustomizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomizationApiserver != nil {
		in, out := &in.CustomizationApiserver, &out.CustomizationApiserver
		*out = make([]CustomizationApiserverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomizationKubeProxy != nil {
		in, out := &in.CustomizationKubeProxy, &out.CustomizationKubeProxy
		*out = make([]CustomizationKubeProxyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeProxyMode != nil {
		in, out := &in.KubeProxyMode, &out.KubeProxyMode
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancersSubnetID != nil {
		in, out := &in.LoadBalancersSubnetID, &out.LoadBalancersSubnetID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodesSubnetID != nil {
		in, out := &in.NodesSubnetID, &out.NodesSubnetID
		*out = new(string)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
	if in.PrivateNetworkConfiguration != nil {
		in, out := &in.PrivateNetworkConfiguration, &out.PrivateNetworkConfiguration
		*out = make([]PrivateNetworkConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateNetworkID != nil {
		in, out := &in.PrivateNetworkID, &out.PrivateNetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeParameters.
func (in *ProjectKubeParameters) DeepCopy() *ProjectKubeParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeSpec) DeepCopyInto(out *ProjectKubeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeSpec.
func (in *ProjectKubeSpec) DeepCopy() *ProjectKubeSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectKubeStatus) DeepCopyInto(out *ProjectKubeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectKubeStatus.
func (in *ProjectKubeStatus) DeepCopy() *ProjectKubeStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectKubeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectList) DeepCopyInto(out *ProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Project, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectList.
func (in *ProjectList) DeepCopy() *ProjectList {
	if in == nil {
		return nil
	}
	out := new(ProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivate) DeepCopyInto(out *ProjectNetworkPrivate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivate.
func (in *ProjectNetworkPrivate) DeepCopy() *ProjectNetworkPrivate {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectNetworkPrivate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateInitParameters) DeepCopyInto(out *ProjectNetworkPrivateInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Regions != nil {
		in, out := &in.Regions, &out.Regions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateInitParameters.
func (in *ProjectNetworkPrivateInitParameters) DeepCopy() *ProjectNetworkPrivateInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateList) DeepCopyInto(out *ProjectNetworkPrivateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectNetworkPrivate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateList.
func (in *ProjectNetworkPrivateList) DeepCopy() *ProjectNetworkPrivateList {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectNetworkPrivateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateObservation) DeepCopyInto(out *ProjectNetworkPrivateObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Regions != nil {
		in, out := &in.Regions, &out.Regions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RegionsAttributes != nil {
		in, out := &in.RegionsAttributes, &out.RegionsAttributes
		*out = make([]RegionsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegionsOpenstackIds != nil {
		in, out := &in.RegionsOpenstackIds, &out.RegionsOpenstackIds
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RegionsStatus != nil {
		in, out := &in.RegionsStatus, &out.RegionsStatus
		*out = make([]RegionsStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateObservation.
func (in *ProjectNetworkPrivateObservation) DeepCopy() *ProjectNetworkPrivateObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateParameters) DeepCopyInto(out *ProjectNetworkPrivateParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Regions != nil {
		in, out := &in.Regions, &out.Regions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateParameters.
func (in *ProjectNetworkPrivateParameters) DeepCopy() *ProjectNetworkPrivateParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSpec) DeepCopyInto(out *ProjectNetworkPrivateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSpec.
func (in *ProjectNetworkPrivateSpec) DeepCopy() *ProjectNetworkPrivateSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateStatus) DeepCopyInto(out *ProjectNetworkPrivateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateStatus.
func (in *ProjectNetworkPrivateStatus) DeepCopy() *ProjectNetworkPrivateStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnet) DeepCopyInto(out *ProjectNetworkPrivateSubnet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnet.
func (in *ProjectNetworkPrivateSubnet) DeepCopy() *ProjectNetworkPrivateSubnet {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectNetworkPrivateSubnet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetInitParameters) DeepCopyInto(out *ProjectNetworkPrivateSubnetInitParameters) {
	*out = *in
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.NoGateway != nil {
		in, out := &in.NoGateway, &out.NoGateway
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetInitParameters.
func (in *ProjectNetworkPrivateSubnetInitParameters) DeepCopy() *ProjectNetworkPrivateSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetList) DeepCopyInto(out *ProjectNetworkPrivateSubnetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectNetworkPrivateSubnet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetList.
func (in *ProjectNetworkPrivateSubnetList) DeepCopy() *ProjectNetworkPrivateSubnetList {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectNetworkPrivateSubnetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetObservation) DeepCopyInto(out *ProjectNetworkPrivateSubnetObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.GatewayIP != nil {
		in, out := &in.GatewayIP, &out.GatewayIP
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPPools != nil {
		in, out := &in.IPPools, &out.IPPools
		*out = make([]IPPoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.NoGateway != nil {
		in, out := &in.NoGateway, &out.NoGateway
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetObservation.
func (in *ProjectNetworkPrivateSubnetObservation) DeepCopy() *ProjectNetworkPrivateSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetParameters) DeepCopyInto(out *ProjectNetworkPrivateSubnetParameters) {
	*out = *in
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.NoGateway != nil {
		in, out := &in.NoGateway, &out.NoGateway
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetParameters.
func (in *ProjectNetworkPrivateSubnetParameters) DeepCopy() *ProjectNetworkPrivateSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetSpec) DeepCopyInto(out *ProjectNetworkPrivateSubnetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetSpec.
func (in *ProjectNetworkPrivateSubnetSpec) DeepCopy() *ProjectNetworkPrivateSubnetSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetStatus) DeepCopyInto(out *ProjectNetworkPrivateSubnetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetStatus.
func (in *ProjectNetworkPrivateSubnetStatus) DeepCopy() *ProjectNetworkPrivateSubnetStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetV2) DeepCopyInto(out *ProjectNetworkPrivateSubnetV2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetV2.
func (in *ProjectNetworkPrivateSubnetV2) DeepCopy() *ProjectNetworkPrivateSubnetV2 {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetV2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectNetworkPrivateSubnetV2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetV2InitParameters) DeepCopyInto(out *ProjectNetworkPrivateSubnetV2InitParameters) {
	*out = *in
	if in.AllocationPools != nil {
		in, out := &in.AllocationPools, &out.AllocationPools
		*out = make([]AllocationPoolsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.DNSNameservers != nil {
		in, out := &in.DNSNameservers, &out.DNSNameservers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableGatewayIP != nil {
		in, out := &in.EnableGatewayIP, &out.EnableGatewayIP
		*out = new(bool)
		**out = **in
	}
	if in.GatewayIP != nil {
		in, out := &in.GatewayIP, &out.GatewayIP
		*out = new(string)
		**out = **in
	}
	if in.HostRoute != nil {
		in, out := &in.HostRoute, &out.HostRoute
		*out = make([]HostRouteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UseDefaultPublicDNSResolver != nil {
		in, out := &in.UseDefaultPublicDNSResolver, &out.UseDefaultPublicDNSResolver
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetV2InitParameters.
func (in *ProjectNetworkPrivateSubnetV2InitParameters) DeepCopy() *ProjectNetworkPrivateSubnetV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetV2List) DeepCopyInto(out *ProjectNetworkPrivateSubnetV2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectNetworkPrivateSubnetV2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetV2List.
func (in *ProjectNetworkPrivateSubnetV2List) DeepCopy() *ProjectNetworkPrivateSubnetV2List {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetV2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectNetworkPrivateSubnetV2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetV2Observation) DeepCopyInto(out *ProjectNetworkPrivateSubnetV2Observation) {
	*out = *in
	if in.AllocationPools != nil {
		in, out := &in.AllocationPools, &out.AllocationPools
		*out = make([]AllocationPoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.DNSNameservers != nil {
		in, out := &in.DNSNameservers, &out.DNSNameservers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableGatewayIP != nil {
		in, out := &in.EnableGatewayIP, &out.EnableGatewayIP
		*out = new(bool)
		**out = **in
	}
	if in.GatewayIP != nil {
		in, out := &in.GatewayIP, &out.GatewayIP
		*out = new(string)
		**out = **in
	}
	if in.HostRoute != nil {
		in, out := &in.HostRoute, &out.HostRoute
		*out = make([]HostRouteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UseDefaultPublicDNSResolver != nil {
		in, out := &in.UseDefaultPublicDNSResolver, &out.UseDefaultPublicDNSResolver
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetV2Observation.
func (in *ProjectNetworkPrivateSubnetV2Observation) DeepCopy() *ProjectNetworkPrivateSubnetV2Observation {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetV2Parameters) DeepCopyInto(out *ProjectNetworkPrivateSubnetV2Parameters) {
	*out = *in
	if in.AllocationPools != nil {
		in, out := &in.AllocationPools, &out.AllocationPools
		*out = make([]AllocationPoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.DNSNameservers != nil {
		in, out := &in.DNSNameservers, &out.DNSNameservers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableGatewayIP != nil {
		in, out := &in.EnableGatewayIP, &out.EnableGatewayIP
		*out = new(bool)
		**out = **in
	}
	if in.GatewayIP != nil {
		in, out := &in.GatewayIP, &out.GatewayIP
		*out = new(string)
		**out = **in
	}
	if in.HostRoute != nil {
		in, out := &in.HostRoute, &out.HostRoute
		*out = make([]HostRouteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UseDefaultPublicDNSResolver != nil {
		in, out := &in.UseDefaultPublicDNSResolver, &out.UseDefaultPublicDNSResolver
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetV2Parameters.
func (in *ProjectNetworkPrivateSubnetV2Parameters) DeepCopy() *ProjectNetworkPrivateSubnetV2Parameters {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetV2Spec) DeepCopyInto(out *ProjectNetworkPrivateSubnetV2Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetV2Spec.
func (in *ProjectNetworkPrivateSubnetV2Spec) DeepCopy() *ProjectNetworkPrivateSubnetV2Spec {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetV2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectNetworkPrivateSubnetV2Status) DeepCopyInto(out *ProjectNetworkPrivateSubnetV2Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectNetworkPrivateSubnetV2Status.
func (in *ProjectNetworkPrivateSubnetV2Status) DeepCopy() *ProjectNetworkPrivateSubnetV2Status {
	if in == nil {
		return nil
	}
	out := new(ProjectNetworkPrivateSubnetV2Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectObservation) DeepCopyInto(out *ProjectObservation) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = make([]OrderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OvhSubsidiary != nil {
		in, out := &in.OvhSubsidiary, &out.OvhSubsidiary
		*out = new(string)
		**out = **in
	}
	if in.PaymentMean != nil {
		in, out := &in.PaymentMean, &out.PaymentMean
		*out = new(string)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = make([]PlanObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlanOption != nil {
		in, out := &in.PlanOption, &out.PlanOption
		*out = make([]PlanOptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectName != nil {
		in, out := &in.ProjectName, &out.ProjectName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Urn != nil {
		in, out := &in.Urn, &out.Urn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectObservation.
func (in *ProjectObservation) DeepCopy() *ProjectObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectParameters) DeepCopyInto(out *ProjectParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = make([]OrderParameters, len(*in))
		copy(*out, *in)
	}
	if in.OvhSubsidiary != nil {
		in, out := &in.OvhSubsidiary, &out.OvhSubsidiary
		*out = new(string)
		**out = **in
	}
	if in.PaymentMean != nil {
		in, out := &in.PaymentMean, &out.PaymentMean
		*out = new(string)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = make([]PlanParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlanOption != nil {
		in, out := &in.PlanOption, &out.PlanOption
		*out = make([]PlanOptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectParameters.
func (in *ProjectParameters) DeepCopy() *ProjectParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionLoadbalancerLogSubscription) DeepCopyInto(out *ProjectRegionLoadbalancerLogSubscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionLoadbalancerLogSubscription.
func (in *ProjectRegionLoadbalancerLogSubscription) DeepCopy() *ProjectRegionLoadbalancerLogSubscription {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionLoadbalancerLogSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectRegionLoadbalancerLogSubscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionLoadbalancerLogSubscriptionInitParameters) DeepCopyInto(out *ProjectRegionLoadbalancerLogSubscriptionInitParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.StreamID != nil {
		in, out := &in.StreamID, &out.StreamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionLoadbalancerLogSubscriptionInitParameters.
func (in *ProjectRegionLoadbalancerLogSubscriptionInitParameters) DeepCopy() *ProjectRegionLoadbalancerLogSubscriptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionLoadbalancerLogSubscriptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionLoadbalancerLogSubscriptionList) DeepCopyInto(out *ProjectRegionLoadbalancerLogSubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectRegionLoadbalancerLogSubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionLoadbalancerLogSubscriptionList.
func (in *ProjectRegionLoadbalancerLogSubscriptionList) DeepCopy() *ProjectRegionLoadbalancerLogSubscriptionList {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionLoadbalancerLogSubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectRegionLoadbalancerLogSubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionLoadbalancerLogSubscriptionObservation) DeepCopyInto(out *ProjectRegionLoadbalancerLogSubscriptionObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LdpServiceName != nil {
		in, out := &in.LdpServiceName, &out.LdpServiceName
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.OperationID != nil {
		in, out := &in.OperationID, &out.OperationID
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.ResourceName != nil {
		in, out := &in.ResourceName, &out.ResourceName
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.StreamID != nil {
		in, out := &in.StreamID, &out.StreamID
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionLoadbalancerLogSubscriptionObservation.
func (in *ProjectRegionLoadbalancerLogSubscriptionObservation) DeepCopy() *ProjectRegionLoadbalancerLogSubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionLoadbalancerLogSubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionLoadbalancerLogSubscriptionParameters) DeepCopyInto(out *ProjectRegionLoadbalancerLogSubscriptionParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.StreamID != nil {
		in, out := &in.StreamID, &out.StreamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionLoadbalancerLogSubscriptionParameters.
func (in *ProjectRegionLoadbalancerLogSubscriptionParameters) DeepCopy() *ProjectRegionLoadbalancerLogSubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionLoadbalancerLogSubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionLoadbalancerLogSubscriptionSpec) DeepCopyInto(out *ProjectRegionLoadbalancerLogSubscriptionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionLoadbalancerLogSubscriptionSpec.
func (in *ProjectRegionLoadbalancerLogSubscriptionSpec) DeepCopy() *ProjectRegionLoadbalancerLogSubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionLoadbalancerLogSubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionLoadbalancerLogSubscriptionStatus) DeepCopyInto(out *ProjectRegionLoadbalancerLogSubscriptionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionLoadbalancerLogSubscriptionStatus.
func (in *ProjectRegionLoadbalancerLogSubscriptionStatus) DeepCopy() *ProjectRegionLoadbalancerLogSubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionLoadbalancerLogSubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionStoragePresign) DeepCopyInto(out *ProjectRegionStoragePresign) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionStoragePresign.
func (in *ProjectRegionStoragePresign) DeepCopy() *ProjectRegionStoragePresign {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionStoragePresign)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectRegionStoragePresign) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionStoragePresignInitParameters) DeepCopyInto(out *ProjectRegionStoragePresignInitParameters) {
	*out = *in
	if in.Expire != nil {
		in, out := &in.Expire, &out.Expire
		*out = new(float64)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.VersionID != nil {
		in, out := &in.VersionID, &out.VersionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionStoragePresignInitParameters.
func (in *ProjectRegionStoragePresignInitParameters) DeepCopy() *ProjectRegionStoragePresignInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionStoragePresignInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionStoragePresignList) DeepCopyInto(out *ProjectRegionStoragePresignList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectRegionStoragePresign, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionStoragePresignList.
func (in *ProjectRegionStoragePresignList) DeepCopy() *ProjectRegionStoragePresignList {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionStoragePresignList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectRegionStoragePresignList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionStoragePresignObservation) DeepCopyInto(out *ProjectRegionStoragePresignObservation) {
	*out = *in
	if in.Expire != nil {
		in, out := &in.Expire, &out.Expire
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SignedHeaders != nil {
		in, out := &in.SignedHeaders, &out.SignedHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.VersionID != nil {
		in, out := &in.VersionID, &out.VersionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionStoragePresignObservation.
func (in *ProjectRegionStoragePresignObservation) DeepCopy() *ProjectRegionStoragePresignObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionStoragePresignObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionStoragePresignParameters) DeepCopyInto(out *ProjectRegionStoragePresignParameters) {
	*out = *in
	if in.Expire != nil {
		in, out := &in.Expire, &out.Expire
		*out = new(float64)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.VersionID != nil {
		in, out := &in.VersionID, &out.VersionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionStoragePresignParameters.
func (in *ProjectRegionStoragePresignParameters) DeepCopy() *ProjectRegionStoragePresignParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionStoragePresignParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionStoragePresignSpec) DeepCopyInto(out *ProjectRegionStoragePresignSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionStoragePresignSpec.
func (in *ProjectRegionStoragePresignSpec) DeepCopy() *ProjectRegionStoragePresignSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionStoragePresignSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRegionStoragePresignStatus) DeepCopyInto(out *ProjectRegionStoragePresignStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRegionStoragePresignStatus.
func (in *ProjectRegionStoragePresignStatus) DeepCopy() *ProjectRegionStoragePresignStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectRegionStoragePresignStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSSHKey) DeepCopyInto(out *ProjectSSHKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSSHKey.
func (in *ProjectSSHKey) DeepCopy() *ProjectSSHKey {
	if in == nil {
		return nil
	}
	out := new(ProjectSSHKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectSSHKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSSHKeyInitParameters) DeepCopyInto(out *ProjectSSHKeyInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSSHKeyInitParameters.
func (in *ProjectSSHKeyInitParameters) DeepCopy() *ProjectSSHKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectSSHKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSSHKeyList) DeepCopyInto(out *ProjectSSHKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectSSHKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSSHKeyList.
func (in *ProjectSSHKeyList) DeepCopy() *ProjectSSHKeyList {
	if in == nil {
		return nil
	}
	out := new(ProjectSSHKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectSSHKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSSHKeyObservation) DeepCopyInto(out *ProjectSSHKeyObservation) {
	*out = *in
	if in.FingerPrint != nil {
		in, out := &in.FingerPrint, &out.FingerPrint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Regions != nil {
		in, out := &in.Regions, &out.Regions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSSHKeyObservation.
func (in *ProjectSSHKeyObservation) DeepCopy() *ProjectSSHKeyObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectSSHKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSSHKeyParameters) DeepCopyInto(out *ProjectSSHKeyParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSSHKeyParameters.
func (in *ProjectSSHKeyParameters) DeepCopy() *ProjectSSHKeyParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectSSHKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSSHKeySpec) DeepCopyInto(out *ProjectSSHKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSSHKeySpec.
func (in *ProjectSSHKeySpec) DeepCopy() *ProjectSSHKeySpec {
	if in == nil {
		return nil
	}
	out := new(ProjectSSHKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSSHKeyStatus) DeepCopyInto(out *ProjectSSHKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSSHKeyStatus.
func (in *ProjectSSHKeyStatus) DeepCopy() *ProjectSSHKeyStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectSSHKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpec) DeepCopyInto(out *ProjectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpec.
func (in *ProjectSpec) DeepCopy() *ProjectSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectStatus) DeepCopyInto(out *ProjectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectStatus.
func (in *ProjectStatus) DeepCopy() *ProjectStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUser) DeepCopyInto(out *ProjectUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUser.
func (in *ProjectUser) DeepCopy() *ProjectUser {
	if in == nil {
		return nil
	}
	out := new(ProjectUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserInitParameters) DeepCopyInto(out *ProjectUserInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.OpenstackRc != nil {
		in, out := &in.OpenstackRc, &out.OpenstackRc
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
	if in.RoleNames != nil {
		in, out := &in.RoleNames, &out.RoleNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserInitParameters.
func (in *ProjectUserInitParameters) DeepCopy() *ProjectUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserList) DeepCopyInto(out *ProjectUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserList.
func (in *ProjectUserList) DeepCopy() *ProjectUserList {
	if in == nil {
		return nil
	}
	out := new(ProjectUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserObservation) DeepCopyInto(out *ProjectUserObservation) {
	*out = *in
	if in.CreationDate != nil {
		in, out := &in.CreationDate, &out.CreationDate
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OpenstackRc != nil {
		in, out := &in.OpenstackRc, &out.OpenstackRc
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
	if in.RoleNames != nil {
		in, out := &in.RoleNames, &out.RoleNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]RolesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserObservation.
func (in *ProjectUserObservation) DeepCopy() *ProjectUserObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserParameters) DeepCopyInto(out *ProjectUserParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.OpenstackRc != nil {
		in, out := &in.OpenstackRc, &out.OpenstackRc
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PasswordReset != nil {
		in, out := &in.PasswordReset, &out.PasswordReset
		*out = new(string)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
	if in.RoleNames != nil {
		in, out := &in.RoleNames, &out.RoleNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserParameters.
func (in *ProjectUserParameters) DeepCopy() *ProjectUserParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3Credential) DeepCopyInto(out *ProjectUserS3Credential) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3Credential.
func (in *ProjectUserS3Credential) DeepCopy() *ProjectUserS3Credential {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3Credential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectUserS3Credential) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3CredentialInitParameters) DeepCopyInto(out *ProjectUserS3CredentialInitParameters) {
	*out = *in
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3CredentialInitParameters.
func (in *ProjectUserS3CredentialInitParameters) DeepCopy() *ProjectUserS3CredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3CredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3CredentialList) DeepCopyInto(out *ProjectUserS3CredentialList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectUserS3Credential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3CredentialList.
func (in *ProjectUserS3CredentialList) DeepCopy() *ProjectUserS3CredentialList {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3CredentialList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectUserS3CredentialList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3CredentialObservation) DeepCopyInto(out *ProjectUserS3CredentialObservation) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InternalUserID != nil {
		in, out := &in.InternalUserID, &out.InternalUserID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3CredentialObservation.
func (in *ProjectUserS3CredentialObservation) DeepCopy() *ProjectUserS3CredentialObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3CredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3CredentialParameters) DeepCopyInto(out *ProjectUserS3CredentialParameters) {
	*out = *in
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3CredentialParameters.
func (in *ProjectUserS3CredentialParameters) DeepCopy() *ProjectUserS3CredentialParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3CredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3CredentialSpec) DeepCopyInto(out *ProjectUserS3CredentialSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3CredentialSpec.
func (in *ProjectUserS3CredentialSpec) DeepCopy() *ProjectUserS3CredentialSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3CredentialSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3CredentialStatus) DeepCopyInto(out *ProjectUserS3CredentialStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3CredentialStatus.
func (in *ProjectUserS3CredentialStatus) DeepCopy() *ProjectUserS3CredentialStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3CredentialStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3Policy) DeepCopyInto(out *ProjectUserS3Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3Policy.
func (in *ProjectUserS3Policy) DeepCopy() *ProjectUserS3Policy {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectUserS3Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3PolicyInitParameters) DeepCopyInto(out *ProjectUserS3PolicyInitParameters) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3PolicyInitParameters.
func (in *ProjectUserS3PolicyInitParameters) DeepCopy() *ProjectUserS3PolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3PolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3PolicyList) DeepCopyInto(out *ProjectUserS3PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectUserS3Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3PolicyList.
func (in *ProjectUserS3PolicyList) DeepCopy() *ProjectUserS3PolicyList {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectUserS3PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3PolicyObservation) DeepCopyInto(out *ProjectUserS3PolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3PolicyObservation.
func (in *ProjectUserS3PolicyObservation) DeepCopy() *ProjectUserS3PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3PolicyParameters) DeepCopyInto(out *ProjectUserS3PolicyParameters) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3PolicyParameters.
func (in *ProjectUserS3PolicyParameters) DeepCopy() *ProjectUserS3PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3PolicySpec) DeepCopyInto(out *ProjectUserS3PolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3PolicySpec.
func (in *ProjectUserS3PolicySpec) DeepCopy() *ProjectUserS3PolicySpec {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserS3PolicyStatus) DeepCopyInto(out *ProjectUserS3PolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserS3PolicyStatus.
func (in *ProjectUserS3PolicyStatus) DeepCopy() *ProjectUserS3PolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectUserS3PolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserSpec) DeepCopyInto(out *ProjectUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserSpec.
func (in *ProjectUserSpec) DeepCopy() *ProjectUserSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectUserStatus) DeepCopyInto(out *ProjectUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectUserStatus.
func (in *ProjectUserStatus) DeepCopy() *ProjectUserStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectVolumeBackup) DeepCopyInto(out *ProjectVolumeBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectVolumeBackup.
func (in *ProjectVolumeBackup) DeepCopy() *ProjectVolumeBackup {
	if in == nil {
		return nil
	}
	out := new(ProjectVolumeBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectVolumeBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectVolumeBackupInitParameters) DeepCopyInto(out *ProjectVolumeBackupInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectVolumeBackupInitParameters.
func (in *ProjectVolumeBackupInitParameters) DeepCopy() *ProjectVolumeBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectVolumeBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectVolumeBackupList) DeepCopyInto(out *ProjectVolumeBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectVolumeBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectVolumeBackupList.
func (in *ProjectVolumeBackupList) DeepCopy() *ProjectVolumeBackupList {
	if in == nil {
		return nil
	}
	out := new(ProjectVolumeBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectVolumeBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectVolumeBackupObservation) DeepCopyInto(out *ProjectVolumeBackupObservation) {
	*out = *in
	if in.CreationDate != nil {
		in, out := &in.CreationDate, &out.CreationDate
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectVolumeBackupObservation.
func (in *ProjectVolumeBackupObservation) DeepCopy() *ProjectVolumeBackupObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectVolumeBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectVolumeBackupParameters) DeepCopyInto(out *ProjectVolumeBackupParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectVolumeBackupParameters.
func (in *ProjectVolumeBackupParameters) DeepCopy() *ProjectVolumeBackupParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectVolumeBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectVolumeBackupSpec) DeepCopyInto(out *ProjectVolumeBackupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectVolumeBackupSpec.
func (in *ProjectVolumeBackupSpec) DeepCopy() *ProjectVolumeBackupSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectVolumeBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectVolumeBackupStatus) DeepCopyInto(out *ProjectVolumeBackupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectVolumeBackupStatus.
func (in *ProjectVolumeBackupStatus) DeepCopy() *ProjectVolumeBackupStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectVolumeBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectWorkflowBackup) DeepCopyInto(out *ProjectWorkflowBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectWorkflowBackup.
func (in *ProjectWorkflowBackup) DeepCopy() *ProjectWorkflowBackup {
	if in == nil {
		return nil
	}
	out := new(ProjectWorkflowBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectWorkflowBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectWorkflowBackupInitParameters) DeepCopyInto(out *ProjectWorkflowBackupInitParameters) {
	*out = *in
	if in.BackupName != nil {
		in, out := &in.BackupName, &out.BackupName
		*out = new(string)
		**out = **in
	}
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.MaxExecutionCount != nil {
		in, out := &in.MaxExecutionCount, &out.MaxExecutionCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.Rotation != nil {
		in, out := &in.Rotation, &out.Rotation
		*out = new(float64)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectWorkflowBackupInitParameters.
func (in *ProjectWorkflowBackupInitParameters) DeepCopy() *ProjectWorkflowBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectWorkflowBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectWorkflowBackupList) DeepCopyInto(out *ProjectWorkflowBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectWorkflowBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectWorkflowBackupList.
func (in *ProjectWorkflowBackupList) DeepCopy() *ProjectWorkflowBackupList {
	if in == nil {
		return nil
	}
	out := new(ProjectWorkflowBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectWorkflowBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectWorkflowBackupObservation) DeepCopyInto(out *ProjectWorkflowBackupObservation) {
	*out = *in
	if in.BackupName != nil {
		in, out := &in.BackupName, &out.BackupName
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.MaxExecutionCount != nil {
		in, out := &in.MaxExecutionCount, &out.MaxExecutionCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.Rotation != nil {
		in, out := &in.Rotation, &out.Rotation
		*out = new(float64)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectWorkflowBackupObservation.
func (in *ProjectWorkflowBackupObservation) DeepCopy() *ProjectWorkflowBackupObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectWorkflowBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectWorkflowBackupParameters) DeepCopyInto(out *ProjectWorkflowBackupParameters) {
	*out = *in
	if in.BackupName != nil {
		in, out := &in.BackupName, &out.BackupName
		*out = new(string)
		**out = **in
	}
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.MaxExecutionCount != nil {
		in, out := &in.MaxExecutionCount, &out.MaxExecutionCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.Rotation != nil {
		in, out := &in.Rotation, &out.Rotation
		*out = new(float64)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectWorkflowBackupParameters.
func (in *ProjectWorkflowBackupParameters) DeepCopy() *ProjectWorkflowBackupParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectWorkflowBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectWorkflowBackupSpec) DeepCopyInto(out *ProjectWorkflowBackupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectWorkflowBackupSpec.
func (in *ProjectWorkflowBackupSpec) DeepCopy() *ProjectWorkflowBackupSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectWorkflowBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectWorkflowBackupStatus) DeepCopyInto(out *ProjectWorkflowBackupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectWorkflowBackupStatus.
func (in *ProjectWorkflowBackupStatus) DeepCopy() *ProjectWorkflowBackupStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectWorkflowBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsAttributesInitParameters) DeepCopyInto(out *RegionsAttributesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsAttributesInitParameters.
func (in *RegionsAttributesInitParameters) DeepCopy() *RegionsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsAttributesObservation) DeepCopyInto(out *RegionsAttributesObservation) {
	*out = *in
	if in.Openstackid != nil {
		in, out := &in.Openstackid, &out.Openstackid
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsAttributesObservation.
func (in *RegionsAttributesObservation) DeepCopy() *RegionsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(RegionsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsAttributesParameters) DeepCopyInto(out *RegionsAttributesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsAttributesParameters.
func (in *RegionsAttributesParameters) DeepCopy() *RegionsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(RegionsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsStatusInitParameters) DeepCopyInto(out *RegionsStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsStatusInitParameters.
func (in *RegionsStatusInitParameters) DeepCopy() *RegionsStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionsStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsStatusObservation) DeepCopyInto(out *RegionsStatusObservation) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsStatusObservation.
func (in *RegionsStatusObservation) DeepCopy() *RegionsStatusObservation {
	if in == nil {
		return nil
	}
	out := new(RegionsStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsStatusParameters) DeepCopyInto(out *RegionsStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsStatusParameters.
func (in *RegionsStatusParameters) DeepCopy() *RegionsStatusParameters {
	if in == nil {
		return nil
	}
	out := new(RegionsStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryLimitsInitParameters) DeepCopyInto(out *RegistryLimitsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryLimitsInitParameters.
func (in *RegistryLimitsInitParameters) DeepCopy() *RegistryLimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegistryLimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryLimitsObservation) DeepCopyInto(out *RegistryLimitsObservation) {
	*out = *in
	if in.ImageStorage != nil {
		in, out := &in.ImageStorage, &out.ImageStorage
		*out = new(float64)
		**out = **in
	}
	if in.ParallelRequest != nil {
		in, out := &in.ParallelRequest, &out.ParallelRequest
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryLimitsObservation.
func (in *RegistryLimitsObservation) DeepCopy() *RegistryLimitsObservation {
	if in == nil {
		return nil
	}
	out := new(RegistryLimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryLimitsParameters) DeepCopyInto(out *RegistryLimitsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryLimitsParameters.
func (in *RegistryLimitsParameters) DeepCopy() *RegistryLimitsParameters {
	if in == nil {
		return nil
	}
	out := new(RegistryLimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesInitParameters) DeepCopyInto(out *RolesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesInitParameters.
func (in *RolesInitParameters) DeepCopy() *RolesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RolesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesObservation) DeepCopyInto(out *RolesObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesObservation.
func (in *RolesObservation) DeepCopy() *RolesObservation {
	if in == nil {
		return nil
	}
	out := new(RolesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesParameters) DeepCopyInto(out *RolesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesParameters.
func (in *RolesParameters) DeepCopy() *RolesParameters {
	if in == nil {
		return nil
	}
	out := new(RolesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyCreateInitParameters) DeepCopyInto(out *SSHKeyCreateInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyCreateInitParameters.
func (in *SSHKeyCreateInitParameters) DeepCopy() *SSHKeyCreateInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSHKeyCreateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyCreateObservation) DeepCopyInto(out *SSHKeyCreateObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyCreateObservation.
func (in *SSHKeyCreateObservation) DeepCopy() *SSHKeyCreateObservation {
	if in == nil {
		return nil
	}
	out := new(SSHKeyCreateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyCreateParameters) DeepCopyInto(out *SSHKeyCreateParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyCreateParameters.
func (in *SSHKeyCreateParameters) DeepCopy() *SSHKeyCreateParameters {
	if in == nil {
		return nil
	}
	out := new(SSHKeyCreateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyInitParameters) DeepCopyInto(out *SSHKeyInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyInitParameters.
func (in *SSHKeyInitParameters) DeepCopy() *SSHKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSHKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyObservation) DeepCopyInto(out *SSHKeyObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyObservation.
func (in *SSHKeyObservation) DeepCopy() *SSHKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SSHKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyParameters) DeepCopyInto(out *SSHKeyParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyParameters.
func (in *SSHKeyParameters) DeepCopy() *SSHKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SSHKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecInitParameters) DeepCopyInto(out *SpecInitParameters) {
	*out = *in
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]map[string]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*string, len(*in))
				for key, val := range *in {
					var outVal *string
					if val == nil {
						(*out)[key] = nil
					} else {
						inVal := (*in)[key]
						in, out := &inVal, &outVal
						*out = new(string)
						**out = **in
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.Unschedulable != nil {
		in, out := &in.Unschedulable, &out.Unschedulable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecInitParameters.
func (in *SpecInitParameters) DeepCopy() *SpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecObservation) DeepCopyInto(out *SpecObservation) {
	*out = *in
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]map[string]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*string, len(*in))
				for key, val := range *in {
					var outVal *string
					if val == nil {
						(*out)[key] = nil
					} else {
						inVal := (*in)[key]
						in, out := &inVal, &outVal
						*out = new(string)
						**out = **in
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.Unschedulable != nil {
		in, out := &in.Unschedulable, &out.Unschedulable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecObservation.
func (in *SpecObservation) DeepCopy() *SpecObservation {
	if in == nil {
		return nil
	}
	out := new(SpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecParameters) DeepCopyInto(out *SpecParameters) {
	*out = *in
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]map[string]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*string, len(*in))
				for key, val := range *in {
					var outVal *string
					if val == nil {
						(*out)[key] = nil
					} else {
						inVal := (*in)[key]
						in, out := &inVal, &outVal
						*out = new(string)
						**out = **in
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.Unschedulable != nil {
		in, out := &in.Unschedulable, &out.Unschedulable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecParameters.
func (in *SpecParameters) DeepCopy() *SpecParameters {
	if in == nil {
		return nil
	}
	out := new(SpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetInitParameters) DeepCopyInto(out *SubnetInitParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.EnableDHCP != nil {
		in, out := &in.EnableDHCP, &out.EnableDHCP
		*out = new(bool)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetInitParameters.
func (in *SubnetInitParameters) DeepCopy() *SubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetObservation) DeepCopyInto(out *SubnetObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.EnableDHCP != nil {
		in, out := &in.EnableDHCP, &out.EnableDHCP
		*out = new(bool)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetObservation.
func (in *SubnetObservation) DeepCopy() *SubnetObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetParameters) DeepCopyInto(out *SubnetParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.EnableDHCP != nil {
		in, out := &in.EnableDHCP, &out.EnableDHCP
		*out = new(bool)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetParameters.
func (in *SubnetParameters) DeepCopy() *SubnetParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetsInitParameters) DeepCopyInto(out *TargetsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetsInitParameters.
func (in *TargetsInitParameters) DeepCopy() *TargetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetsObservation) DeepCopyInto(out *TargetsObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetsObservation.
func (in *TargetsObservation) DeepCopy() *TargetsObservation {
	if in == nil {
		return nil
	}
	out := new(TargetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetsParameters) DeepCopyInto(out *TargetsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetsParameters.
func (in *TargetsParameters) DeepCopy() *TargetsParameters {
	if in == nil {
		return nil
	}
	out := new(TargetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateInitParameters) DeepCopyInto(out *TemplateInitParameters) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateInitParameters.
func (in *TemplateInitParameters) DeepCopy() *TemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateObservation) DeepCopyInto(out *TemplateObservation) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateObservation.
func (in *TemplateObservation) DeepCopy() *TemplateObservation {
	if in == nil {
		return nil
	}
	out := new(TemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateParameters) DeepCopyInto(out *TemplateParameters) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateParameters.
func (in *TemplateParameters) DeepCopy() *TemplateParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateParameters)
	in.DeepCopyInto(out)
	return out
}
