// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type APIOauth2ClientInitParameters struct {

	// Callback URLs of the applications using this oauth2 client. Required if using the AUTHORIZATION_CODE flow.
	CallbackUrls []*string `json:"callbackUrls,omitempty" tf:"callback_urls,omitempty"`

	// A description of your oauth2 client.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// OAuth2 flow type implemented for this oauth2 client. Can be either AUTHORIZATION_CODE or CLIENT_CREDENTIALS
	Flow *string `json:"flow,omitempty" tf:"flow,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type APIOauth2ClientObservation struct {

	// Callback URLs of the applications using this oauth2 client. Required if using the AUTHORIZATION_CODE flow.
	CallbackUrls []*string `json:"callbackUrls,omitempty" tf:"callback_urls,omitempty"`

	// Client ID for the oauth2 client, generated during the resource creation.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// A description of your oauth2 client.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// OAuth2 flow type implemented for this oauth2 client. Can be either AUTHORIZATION_CODE or CLIENT_CREDENTIALS
	Flow *string `json:"flow,omitempty" tf:"flow,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// URN that will allow you to associate this oauth2 client with an access policy
	Identity *string `json:"identity,omitempty" tf:"identity,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type APIOauth2ClientParameters struct {

	// Callback URLs of the applications using this oauth2 client. Required if using the AUTHORIZATION_CODE flow.
	// +kubebuilder:validation:Optional
	CallbackUrls []*string `json:"callbackUrls,omitempty" tf:"callback_urls,omitempty"`

	// A description of your oauth2 client.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// OAuth2 flow type implemented for this oauth2 client. Can be either AUTHORIZATION_CODE or CLIENT_CREDENTIALS
	// +kubebuilder:validation:Optional
	Flow *string `json:"flow,omitempty" tf:"flow,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

// APIOauth2ClientSpec defines the desired state of APIOauth2Client
type APIOauth2ClientSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     APIOauth2ClientParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider APIOauth2ClientInitParameters `json:"initProvider,omitempty"`
}

// APIOauth2ClientStatus defines the observed state of APIOauth2Client.
type APIOauth2ClientStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        APIOauth2ClientObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// APIOauth2Client is the Schema for the APIOauth2Clients API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,ovh}
type APIOauth2Client struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.description) || (has(self.initProvider) && has(self.initProvider.description))",message="spec.forProvider.description is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.flow) || (has(self.initProvider) && has(self.initProvider.flow))",message="spec.forProvider.flow is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   APIOauth2ClientSpec   `json:"spec"`
	Status APIOauth2ClientStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// APIOauth2ClientList contains a list of APIOauth2Clients
type APIOauth2ClientList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []APIOauth2Client `json:"items"`
}

// Repository type metadata.
var (
	APIOauth2Client_Kind             = "APIOauth2Client"
	APIOauth2Client_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: APIOauth2Client_Kind}.String()
	APIOauth2Client_KindAPIVersion   = APIOauth2Client_Kind + "." + CRDGroupVersion.String()
	APIOauth2Client_GroupVersionKind = CRDGroupVersion.WithKind(APIOauth2Client_Kind)
)

func init() {
	SchemeBuilder.Register(&APIOauth2Client{}, &APIOauth2ClientList{})
}
